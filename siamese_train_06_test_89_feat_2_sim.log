I0715 12:52:15.101265 19421 caffe.cpp:178] Use CPU.
I0715 12:52:15.101574 19421 solver.cpp:48] Initializing solver from parameters: 
test_iter: 100
test_interval: 100
base_lr: 0.01
display: 100
max_iter: 5000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0
snapshot: 1000
snapshot_prefix: "examples/siamese/My_mnist_siamese_0to6_t89_feat_2_sim"
solver_mode: CPU
net: "examples/siamese/mnist_siamese_train_test_sim.prototxt"
I0715 12:52:15.101764 19421 solver.cpp:91] Creating training net from net file: examples/siamese/mnist_siamese_train_test_sim.prototxt
I0715 12:52:15.102463 19421 net.cpp:313] The NetState phase (0) differed from the phase (1) specified by a rule in layer pair_data
I0715 12:52:15.102514 19421 net.cpp:313] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0715 12:52:15.102730 19421 net.cpp:49] Initializing net from parameters: 
name: "mnist_siamese_train_test_sim"
state {
  phase: TRAIN
}
layer {
  name: "pair_data"
  type: "Data"
  top: "pair_data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "/home/shaogang/caffe/examples/siamese/mnist_siamese_train_leveldb_0to6"
    batch_size: 64
    backend: LEVELDB
  }
}
layer {
  name: "slice_pair"
  type: "Slice"
  bottom: "pair_data"
  top: "data"
  top: "data_p"
  slice_param {
    slice_dim: 1
    slice_point: 1
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    name: "conv1_w"
    lr_mult: 1
  }
  param {
    name: "conv1_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    name: "conv2_w"
    lr_mult: 1
  }
  param {
    name: "conv2_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    name: "ip1_w"
    lr_mult: 1
  }
  param {
    name: "ip1_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    name: "ip2_w"
    lr_mult: 1
  }
  param {
    name: "ip2_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "feat"
  type: "InnerProduct"
  bottom: "ip2"
  top: "feat"
  param {
    name: "feat_w"
    lr_mult: 1
  }
  param {
    name: "feat_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv1_p"
  type: "Convolution"
  bottom: "data_p"
  top: "conv1_p"
  param {
    name: "conv1_w"
    lr_mult: 1
  }
  param {
    name: "conv1_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1_p"
  type: "Pooling"
  bottom: "conv1_p"
  top: "pool1_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_p"
  type: "Convolution"
  bottom: "pool1_p"
  top: "conv2_p"
  param {
    name: "conv2_w"
    lr_mult: 1
  }
  param {
    name: "conv2_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2_p"
  type: "Pooling"
  bottom: "conv2_p"
  top: "pool2_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1_p"
  type: "InnerProduct"
  bottom: "pool2_p"
  top: "ip1_p"
  param {
    name: "ip1_w"
    lr_mult: 1
  }
  param {
    name: "ip1_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1_p"
  type: "ReLU"
  bottom: "ip1_p"
  top: "ip1_p"
}
layer {
  name: "ip2_p"
  type: "InnerProduct"
  bottom: "ip1_p"
  top: "ip2_p"
  param {
    name: "ip2_w"
    lr_mult: 1
  }
  param {
    name: "ip2_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "feat_p"
  type: "InnerProduct"
  bottom: "ip2_p"
  top: "feat_p"
  param {
    name: "feat_w"
    lr_mult: 1
  }
  param {
    name: "feat_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "concat"
  type: "Concat"
  bottom: "feat"
  bottom: "feat_p"
  top: "comb"
  concat_param {
    axis: 1
  }
}
layer {
  name: "fc1"
  type: "InnerProduct"
  bottom: "comb"
  top: "fc1"
  param {
    name: "fc1_w"
    lr_mult: 1
  }
  param {
    name: "fc1_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1_fc1"
  type: "ReLU"
  bottom: "fc1"
  top: "fc1"
}
layer {
  name: "fc2"
  type: "InnerProduct"
  bottom: "fc1"
  top: "fc2"
  param {
    name: "fc2_w"
    lr_mult: 1
  }
  param {
    name: "fc2_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2_fc2"
  type: "ReLU"
  bottom: "fc2"
  top: "fc2"
}
layer {
  name: "fc3"
  type: "InnerProduct"
  bottom: "fc2"
  top: "fc3"
  param {
    name: "fc3_w"
    lr_mult: 1
  }
  param {
    name: "fc3_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc3"
  bottom: "label"
  top: "loss"
}
I0715 12:52:15.102864 19421 layer_factory.hpp:77] Creating layer pair_data
I0715 12:52:15.103381 19421 net.cpp:91] Creating Layer pair_data
I0715 12:52:15.103406 19421 net.cpp:399] pair_data -> pair_data
I0715 12:52:15.103442 19421 net.cpp:399] pair_data -> label
I0715 12:52:15.109977 19425 db_leveldb.cpp:18] Opened leveldb /home/shaogang/caffe/examples/siamese/mnist_siamese_train_leveldb_0to6
I0715 12:52:15.113431 19421 data_layer.cpp:41] output data size: 64,2,28,28
I0715 12:52:15.113945 19421 net.cpp:141] Setting up pair_data
I0715 12:52:15.113975 19421 net.cpp:148] Top shape: 64 2 28 28 (100352)
I0715 12:52:15.113981 19421 net.cpp:148] Top shape: 64 (64)
I0715 12:52:15.113983 19421 net.cpp:156] Memory required for data: 401664
I0715 12:52:15.113993 19421 layer_factory.hpp:77] Creating layer slice_pair
I0715 12:52:15.114013 19421 net.cpp:91] Creating Layer slice_pair
I0715 12:52:15.114019 19421 net.cpp:425] slice_pair <- pair_data
I0715 12:52:15.114029 19421 net.cpp:399] slice_pair -> data
I0715 12:52:15.114040 19421 net.cpp:399] slice_pair -> data_p
I0715 12:52:15.114054 19421 net.cpp:141] Setting up slice_pair
I0715 12:52:15.114073 19421 net.cpp:148] Top shape: 64 1 28 28 (50176)
I0715 12:52:15.114078 19421 net.cpp:148] Top shape: 64 1 28 28 (50176)
I0715 12:52:15.114079 19421 net.cpp:156] Memory required for data: 803072
I0715 12:52:15.114083 19421 layer_factory.hpp:77] Creating layer conv1
I0715 12:52:15.114178 19421 net.cpp:91] Creating Layer conv1
I0715 12:52:15.114204 19421 net.cpp:425] conv1 <- data
I0715 12:52:15.114213 19421 net.cpp:399] conv1 -> conv1
I0715 12:52:15.114320 19421 net.cpp:141] Setting up conv1
I0715 12:52:15.114348 19421 net.cpp:148] Top shape: 64 20 24 24 (737280)
I0715 12:52:15.114351 19421 net.cpp:156] Memory required for data: 3752192
I0715 12:52:15.114362 19421 layer_factory.hpp:77] Creating layer pool1
I0715 12:52:15.119211 19421 net.cpp:91] Creating Layer pool1
I0715 12:52:15.119272 19421 net.cpp:425] pool1 <- conv1
I0715 12:52:15.119319 19421 net.cpp:399] pool1 -> pool1
I0715 12:52:15.119393 19421 net.cpp:141] Setting up pool1
I0715 12:52:15.119437 19421 net.cpp:148] Top shape: 64 20 12 12 (184320)
I0715 12:52:15.119460 19421 net.cpp:156] Memory required for data: 4489472
I0715 12:52:15.119483 19421 layer_factory.hpp:77] Creating layer conv2
I0715 12:52:15.119526 19421 net.cpp:91] Creating Layer conv2
I0715 12:52:15.119552 19421 net.cpp:425] conv2 <- pool1
I0715 12:52:15.119580 19421 net.cpp:399] conv2 -> conv2
I0715 12:52:15.119897 19421 net.cpp:141] Setting up conv2
I0715 12:52:15.119964 19421 net.cpp:148] Top shape: 64 50 8 8 (204800)
I0715 12:52:15.119995 19421 net.cpp:156] Memory required for data: 5308672
I0715 12:52:15.120035 19421 layer_factory.hpp:77] Creating layer pool2
I0715 12:52:15.120075 19421 net.cpp:91] Creating Layer pool2
I0715 12:52:15.120103 19421 net.cpp:425] pool2 <- conv2
I0715 12:52:15.120134 19421 net.cpp:399] pool2 -> pool2
I0715 12:52:15.120173 19421 net.cpp:141] Setting up pool2
I0715 12:52:15.120203 19421 net.cpp:148] Top shape: 64 50 4 4 (51200)
I0715 12:52:15.120235 19421 net.cpp:156] Memory required for data: 5513472
I0715 12:52:15.120261 19421 layer_factory.hpp:77] Creating layer ip1
I0715 12:52:15.120312 19421 net.cpp:91] Creating Layer ip1
I0715 12:52:15.120340 19421 net.cpp:425] ip1 <- pool2
I0715 12:52:15.120371 19421 net.cpp:399] ip1 -> ip1
I0715 12:52:15.124598 19421 net.cpp:141] Setting up ip1
I0715 12:52:15.124742 19421 net.cpp:148] Top shape: 64 500 (32000)
I0715 12:52:15.124795 19421 net.cpp:156] Memory required for data: 5641472
I0715 12:52:15.124860 19421 layer_factory.hpp:77] Creating layer relu1
I0715 12:52:15.124920 19421 net.cpp:91] Creating Layer relu1
I0715 12:52:15.124964 19421 net.cpp:425] relu1 <- ip1
I0715 12:52:15.125006 19421 net.cpp:386] relu1 -> ip1 (in-place)
I0715 12:52:15.125057 19421 net.cpp:141] Setting up relu1
I0715 12:52:15.125095 19421 net.cpp:148] Top shape: 64 500 (32000)
I0715 12:52:15.125124 19421 net.cpp:156] Memory required for data: 5769472
I0715 12:52:15.125154 19421 layer_factory.hpp:77] Creating layer ip2
I0715 12:52:15.125203 19421 net.cpp:91] Creating Layer ip2
I0715 12:52:15.125236 19421 net.cpp:425] ip2 <- ip1
I0715 12:52:15.125269 19421 net.cpp:399] ip2 -> ip2
I0715 12:52:15.125387 19421 net.cpp:141] Setting up ip2
I0715 12:52:15.125428 19421 net.cpp:148] Top shape: 64 10 (640)
I0715 12:52:15.125452 19421 net.cpp:156] Memory required for data: 5772032
I0715 12:52:15.125483 19421 layer_factory.hpp:77] Creating layer feat
I0715 12:52:15.125515 19421 net.cpp:91] Creating Layer feat
I0715 12:52:15.125542 19421 net.cpp:425] feat <- ip2
I0715 12:52:15.125573 19421 net.cpp:399] feat -> feat
I0715 12:52:15.125623 19421 net.cpp:141] Setting up feat
I0715 12:52:15.125656 19421 net.cpp:148] Top shape: 64 2 (128)
I0715 12:52:15.125680 19421 net.cpp:156] Memory required for data: 5772544
I0715 12:52:15.125715 19421 layer_factory.hpp:77] Creating layer conv1_p
I0715 12:52:15.125751 19421 net.cpp:91] Creating Layer conv1_p
I0715 12:52:15.125774 19421 net.cpp:425] conv1_p <- data_p
I0715 12:52:15.125809 19421 net.cpp:399] conv1_p -> conv1_p
I0715 12:52:15.125883 19421 net.cpp:141] Setting up conv1_p
I0715 12:52:15.125917 19421 net.cpp:148] Top shape: 64 20 24 24 (737280)
I0715 12:52:15.125941 19421 net.cpp:156] Memory required for data: 8721664
I0715 12:52:15.125967 19421 net.cpp:484] Sharing parameters 'conv1_w' owned by layer 'conv1', param index 0
I0715 12:52:15.125993 19421 net.cpp:484] Sharing parameters 'conv1_b' owned by layer 'conv1', param index 1
I0715 12:52:15.126051 19421 layer_factory.hpp:77] Creating layer pool1_p
I0715 12:52:15.126088 19421 net.cpp:91] Creating Layer pool1_p
I0715 12:52:15.126111 19421 net.cpp:425] pool1_p <- conv1_p
I0715 12:52:15.126137 19421 net.cpp:399] pool1_p -> pool1_p
I0715 12:52:15.126174 19421 net.cpp:141] Setting up pool1_p
I0715 12:52:15.126202 19421 net.cpp:148] Top shape: 64 20 12 12 (184320)
I0715 12:52:15.126224 19421 net.cpp:156] Memory required for data: 9458944
I0715 12:52:15.126246 19421 layer_factory.hpp:77] Creating layer conv2_p
I0715 12:52:15.126281 19421 net.cpp:91] Creating Layer conv2_p
I0715 12:52:15.126307 19421 net.cpp:425] conv2_p <- pool1_p
I0715 12:52:15.126333 19421 net.cpp:399] conv2_p -> conv2_p
I0715 12:52:15.126775 19421 net.cpp:141] Setting up conv2_p
I0715 12:52:15.126848 19421 net.cpp:148] Top shape: 64 50 8 8 (204800)
I0715 12:52:15.126875 19421 net.cpp:156] Memory required for data: 10278144
I0715 12:52:15.126900 19421 net.cpp:484] Sharing parameters 'conv2_w' owned by layer 'conv2', param index 0
I0715 12:52:15.126926 19421 net.cpp:484] Sharing parameters 'conv2_b' owned by layer 'conv2', param index 1
I0715 12:52:15.126950 19421 layer_factory.hpp:77] Creating layer pool2_p
I0715 12:52:15.126977 19421 net.cpp:91] Creating Layer pool2_p
I0715 12:52:15.127001 19421 net.cpp:425] pool2_p <- conv2_p
I0715 12:52:15.127038 19421 net.cpp:399] pool2_p -> pool2_p
I0715 12:52:15.127074 19421 net.cpp:141] Setting up pool2_p
I0715 12:52:15.127100 19421 net.cpp:148] Top shape: 64 50 4 4 (51200)
I0715 12:52:15.127122 19421 net.cpp:156] Memory required for data: 10482944
I0715 12:52:15.127145 19421 layer_factory.hpp:77] Creating layer ip1_p
I0715 12:52:15.127177 19421 net.cpp:91] Creating Layer ip1_p
I0715 12:52:15.127202 19421 net.cpp:425] ip1_p <- pool2_p
I0715 12:52:15.127228 19421 net.cpp:399] ip1_p -> ip1_p
I0715 12:52:15.131575 19421 net.cpp:141] Setting up ip1_p
I0715 12:52:15.131676 19421 net.cpp:148] Top shape: 64 500 (32000)
I0715 12:52:15.131700 19421 net.cpp:156] Memory required for data: 10610944
I0715 12:52:15.131726 19421 net.cpp:484] Sharing parameters 'ip1_w' owned by layer 'ip1', param index 0
I0715 12:52:15.131749 19421 net.cpp:484] Sharing parameters 'ip1_b' owned by layer 'ip1', param index 1
I0715 12:52:15.131772 19421 layer_factory.hpp:77] Creating layer relu1_p
I0715 12:52:15.131799 19421 net.cpp:91] Creating Layer relu1_p
I0715 12:52:15.131821 19421 net.cpp:425] relu1_p <- ip1_p
I0715 12:52:15.131845 19421 net.cpp:386] relu1_p -> ip1_p (in-place)
I0715 12:52:15.131875 19421 net.cpp:141] Setting up relu1_p
I0715 12:52:15.131897 19421 net.cpp:148] Top shape: 64 500 (32000)
I0715 12:52:15.131916 19421 net.cpp:156] Memory required for data: 10738944
I0715 12:52:15.131937 19421 layer_factory.hpp:77] Creating layer ip2_p
I0715 12:52:15.131970 19421 net.cpp:91] Creating Layer ip2_p
I0715 12:52:15.131994 19421 net.cpp:425] ip2_p <- ip1_p
I0715 12:52:15.132019 19421 net.cpp:399] ip2_p -> ip2_p
I0715 12:52:15.132117 19421 net.cpp:141] Setting up ip2_p
I0715 12:52:15.132144 19421 net.cpp:148] Top shape: 64 10 (640)
I0715 12:52:15.132164 19421 net.cpp:156] Memory required for data: 10741504
I0715 12:52:15.132190 19421 net.cpp:484] Sharing parameters 'ip2_w' owned by layer 'ip2', param index 0
I0715 12:52:15.132215 19421 net.cpp:484] Sharing parameters 'ip2_b' owned by layer 'ip2', param index 1
I0715 12:52:15.132236 19421 layer_factory.hpp:77] Creating layer feat_p
I0715 12:52:15.132259 19421 net.cpp:91] Creating Layer feat_p
I0715 12:52:15.132280 19421 net.cpp:425] feat_p <- ip2_p
I0715 12:52:15.132303 19421 net.cpp:399] feat_p -> feat_p
I0715 12:52:15.132339 19421 net.cpp:141] Setting up feat_p
I0715 12:52:15.132364 19421 net.cpp:148] Top shape: 64 2 (128)
I0715 12:52:15.132383 19421 net.cpp:156] Memory required for data: 10742016
I0715 12:52:15.132405 19421 net.cpp:484] Sharing parameters 'feat_w' owned by layer 'feat', param index 0
I0715 12:52:15.132426 19421 net.cpp:484] Sharing parameters 'feat_b' owned by layer 'feat', param index 1
I0715 12:52:15.132457 19421 layer_factory.hpp:77] Creating layer concat
I0715 12:52:15.132501 19421 net.cpp:91] Creating Layer concat
I0715 12:52:15.132524 19421 net.cpp:425] concat <- feat
I0715 12:52:15.132544 19421 net.cpp:425] concat <- feat_p
I0715 12:52:15.132567 19421 net.cpp:399] concat -> comb
I0715 12:52:15.132597 19421 net.cpp:141] Setting up concat
I0715 12:52:15.132621 19421 net.cpp:148] Top shape: 64 4 (256)
I0715 12:52:15.132639 19421 net.cpp:156] Memory required for data: 10743040
I0715 12:52:15.132659 19421 layer_factory.hpp:77] Creating layer fc1
I0715 12:52:15.132683 19421 net.cpp:91] Creating Layer fc1
I0715 12:52:15.132704 19421 net.cpp:425] fc1 <- comb
I0715 12:52:15.132730 19421 net.cpp:399] fc1 -> fc1
I0715 12:52:15.132778 19421 net.cpp:141] Setting up fc1
I0715 12:52:15.132803 19421 net.cpp:148] Top shape: 64 100 (6400)
I0715 12:52:15.132823 19421 net.cpp:156] Memory required for data: 10768640
I0715 12:52:15.132846 19421 layer_factory.hpp:77] Creating layer relu1_fc1
I0715 12:52:15.132874 19421 net.cpp:91] Creating Layer relu1_fc1
I0715 12:52:15.132894 19421 net.cpp:425] relu1_fc1 <- fc1
I0715 12:52:15.132916 19421 net.cpp:386] relu1_fc1 -> fc1 (in-place)
I0715 12:52:15.132946 19421 net.cpp:141] Setting up relu1_fc1
I0715 12:52:15.132967 19421 net.cpp:148] Top shape: 64 100 (6400)
I0715 12:52:15.132987 19421 net.cpp:156] Memory required for data: 10794240
I0715 12:52:15.133007 19421 layer_factory.hpp:77] Creating layer fc2
I0715 12:52:15.133030 19421 net.cpp:91] Creating Layer fc2
I0715 12:52:15.133050 19421 net.cpp:425] fc2 <- fc1
I0715 12:52:15.133074 19421 net.cpp:399] fc2 -> fc2
I0715 12:52:15.133165 19421 net.cpp:141] Setting up fc2
I0715 12:52:15.133193 19421 net.cpp:148] Top shape: 64 50 (3200)
I0715 12:52:15.133213 19421 net.cpp:156] Memory required for data: 10807040
I0715 12:52:15.133237 19421 layer_factory.hpp:77] Creating layer relu2_fc2
I0715 12:52:15.133261 19421 net.cpp:91] Creating Layer relu2_fc2
I0715 12:52:15.133282 19421 net.cpp:425] relu2_fc2 <- fc2
I0715 12:52:15.133304 19421 net.cpp:386] relu2_fc2 -> fc2 (in-place)
I0715 12:52:15.133328 19421 net.cpp:141] Setting up relu2_fc2
I0715 12:52:15.133352 19421 net.cpp:148] Top shape: 64 50 (3200)
I0715 12:52:15.133371 19421 net.cpp:156] Memory required for data: 10819840
I0715 12:52:15.133391 19421 layer_factory.hpp:77] Creating layer fc3
I0715 12:52:15.133416 19421 net.cpp:91] Creating Layer fc3
I0715 12:52:15.133437 19421 net.cpp:425] fc3 <- fc2
I0715 12:52:15.133466 19421 net.cpp:399] fc3 -> fc3
I0715 12:52:15.133503 19421 net.cpp:141] Setting up fc3
I0715 12:52:15.133533 19421 net.cpp:148] Top shape: 64 2 (128)
I0715 12:52:15.133553 19421 net.cpp:156] Memory required for data: 10820352
I0715 12:52:15.133575 19421 layer_factory.hpp:77] Creating layer loss
I0715 12:52:15.133600 19421 net.cpp:91] Creating Layer loss
I0715 12:52:15.133621 19421 net.cpp:425] loss <- fc3
I0715 12:52:15.133643 19421 net.cpp:425] loss <- label
I0715 12:52:15.133674 19421 net.cpp:399] loss -> loss
I0715 12:52:15.133723 19421 layer_factory.hpp:77] Creating layer loss
I0715 12:52:15.133790 19421 net.cpp:141] Setting up loss
I0715 12:52:15.133821 19421 net.cpp:148] Top shape: (1)
I0715 12:52:15.133841 19421 net.cpp:151]     with loss weight 1
I0715 12:52:15.133888 19421 net.cpp:156] Memory required for data: 10820356
I0715 12:52:15.133909 19421 net.cpp:217] loss needs backward computation.
I0715 12:52:15.133929 19421 net.cpp:217] fc3 needs backward computation.
I0715 12:52:15.133949 19421 net.cpp:217] relu2_fc2 needs backward computation.
I0715 12:52:15.133970 19421 net.cpp:217] fc2 needs backward computation.
I0715 12:52:15.133991 19421 net.cpp:217] relu1_fc1 needs backward computation.
I0715 12:52:15.134009 19421 net.cpp:217] fc1 needs backward computation.
I0715 12:52:15.134030 19421 net.cpp:217] concat needs backward computation.
I0715 12:52:15.134050 19421 net.cpp:217] feat_p needs backward computation.
I0715 12:52:15.134071 19421 net.cpp:217] ip2_p needs backward computation.
I0715 12:52:15.134091 19421 net.cpp:217] relu1_p needs backward computation.
I0715 12:52:15.134126 19421 net.cpp:217] ip1_p needs backward computation.
I0715 12:52:15.134162 19421 net.cpp:217] pool2_p needs backward computation.
I0715 12:52:15.134183 19421 net.cpp:217] conv2_p needs backward computation.
I0715 12:52:15.134203 19421 net.cpp:217] pool1_p needs backward computation.
I0715 12:52:15.134225 19421 net.cpp:217] conv1_p needs backward computation.
I0715 12:52:15.134246 19421 net.cpp:217] feat needs backward computation.
I0715 12:52:15.134266 19421 net.cpp:217] ip2 needs backward computation.
I0715 12:52:15.134455 19421 net.cpp:217] relu1 needs backward computation.
I0715 12:52:15.134548 19421 net.cpp:217] ip1 needs backward computation.
I0715 12:52:15.134572 19421 net.cpp:217] pool2 needs backward computation.
I0715 12:52:15.134593 19421 net.cpp:217] conv2 needs backward computation.
I0715 12:52:15.134615 19421 net.cpp:217] pool1 needs backward computation.
I0715 12:52:15.134635 19421 net.cpp:217] conv1 needs backward computation.
I0715 12:52:15.134667 19421 net.cpp:219] slice_pair does not need backward computation.
I0715 12:52:15.134690 19421 net.cpp:219] pair_data does not need backward computation.
I0715 12:52:15.134711 19421 net.cpp:261] This network produces output loss
I0715 12:52:15.134975 19421 net.cpp:274] Network initialization done.
I0715 12:52:15.136214 19421 solver.cpp:181] Creating test net (#0) specified by net file: examples/siamese/mnist_siamese_train_test_sim.prototxt
I0715 12:52:15.136435 19421 net.cpp:313] The NetState phase (1) differed from the phase (0) specified by a rule in layer pair_data
I0715 12:52:15.136785 19421 net.cpp:49] Initializing net from parameters: 
name: "mnist_siamese_train_test_sim"
state {
  phase: TEST
}
layer {
  name: "pair_data"
  type: "Data"
  top: "pair_data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "/home/shaogang/caffe/examples/siamese/mnist_siamese_test_leveldb_89"
    batch_size: 100
    backend: LEVELDB
  }
}
layer {
  name: "slice_pair"
  type: "Slice"
  bottom: "pair_data"
  top: "data"
  top: "data_p"
  slice_param {
    slice_dim: 1
    slice_point: 1
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    name: "conv1_w"
    lr_mult: 1
  }
  param {
    name: "conv1_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    name: "conv2_w"
    lr_mult: 1
  }
  param {
    name: "conv2_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    name: "ip1_w"
    lr_mult: 1
  }
  param {
    name: "ip1_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    name: "ip2_w"
    lr_mult: 1
  }
  param {
    name: "ip2_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "feat"
  type: "InnerProduct"
  bottom: "ip2"
  top: "feat"
  param {
    name: "feat_w"
    lr_mult: 1
  }
  param {
    name: "feat_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv1_p"
  type: "Convolution"
  bottom: "data_p"
  top: "conv1_p"
  param {
    name: "conv1_w"
    lr_mult: 1
  }
  param {
    name: "conv1_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1_p"
  type: "Pooling"
  bottom: "conv1_p"
  top: "pool1_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_p"
  type: "Convolution"
  bottom: "pool1_p"
  top: "conv2_p"
  param {
    name: "conv2_w"
    lr_mult: 1
  }
  param {
    name: "conv2_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2_p"
  type: "Pooling"
  bottom: "conv2_p"
  top: "pool2_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1_p"
  type: "InnerProduct"
  bottom: "pool2_p"
  top: "ip1_p"
  param {
    name: "ip1_w"
    lr_mult: 1
  }
  param {
    name: "ip1_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1_p"
  type: "ReLU"
  bottom: "ip1_p"
  top: "ip1_p"
}
layer {
  name: "ip2_p"
  type: "InnerProduct"
  bottom: "ip1_p"
  top: "ip2_p"
  param {
    name: "ip2_w"
    lr_mult: 1
  }
  param {
    name: "ip2_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "feat_p"
  type: "InnerProduct"
  bottom: "ip2_p"
  top: "feat_p"
  param {
    name: "feat_w"
    lr_mult: 1
  }
  param {
    name: "feat_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "concat"
  type: "Concat"
  bottom: "feat"
  bottom: "feat_p"
  top: "comb"
  concat_param {
    axis: 1
  }
}
layer {
  name: "fc1"
  type: "InnerProduct"
  bottom: "comb"
  top: "fc1"
  param {
    name: "fc1_w"
    lr_mult: 1
  }
  param {
    name: "fc1_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1_fc1"
  type: "ReLU"
  bottom: "fc1"
  top: "fc1"
}
layer {
  name: "fc2"
  type: "InnerProduct"
  bottom: "fc1"
  top: "fc2"
  param {
    name: "fc2_w"
    lr_mult: 1
  }
  param {
    name: "fc2_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2_fc2"
  type: "ReLU"
  bottom: "fc2"
  top: "fc2"
}
layer {
  name: "fc3"
  type: "InnerProduct"
  bottom: "fc2"
  top: "fc3"
  param {
    name: "fc3_w"
    lr_mult: 1
  }
  param {
    name: "fc3_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc3"
  bottom: "label"
  top: "loss"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
I0715 12:52:15.137910 19421 layer_factory.hpp:77] Creating layer pair_data
I0715 12:52:15.138073 19421 net.cpp:91] Creating Layer pair_data
I0715 12:52:15.138085 19421 net.cpp:399] pair_data -> pair_data
I0715 12:52:15.138101 19421 net.cpp:399] pair_data -> label
I0715 12:52:15.185781 19427 db_leveldb.cpp:18] Opened leveldb /home/shaogang/caffe/examples/siamese/mnist_siamese_test_leveldb_89
I0715 12:52:15.186244 19421 data_layer.cpp:41] output data size: 100,2,28,28
I0715 12:52:15.187163 19421 net.cpp:141] Setting up pair_data
I0715 12:52:15.187309 19428 blocking_queue.cpp:50] Waiting for data
I0715 12:52:15.187315 19421 net.cpp:148] Top shape: 100 2 28 28 (156800)
I0715 12:52:15.187489 19421 net.cpp:148] Top shape: 100 (100)
I0715 12:52:15.187496 19421 net.cpp:156] Memory required for data: 627600
I0715 12:52:15.187505 19421 layer_factory.hpp:77] Creating layer label_pair_data_1_split
I0715 12:52:15.187521 19421 net.cpp:91] Creating Layer label_pair_data_1_split
I0715 12:52:15.187527 19421 net.cpp:425] label_pair_data_1_split <- label
I0715 12:52:15.187536 19421 net.cpp:399] label_pair_data_1_split -> label_pair_data_1_split_0
I0715 12:52:15.187549 19421 net.cpp:399] label_pair_data_1_split -> label_pair_data_1_split_1
I0715 12:52:15.187562 19421 net.cpp:141] Setting up label_pair_data_1_split
I0715 12:52:15.187569 19421 net.cpp:148] Top shape: 100 (100)
I0715 12:52:15.187575 19421 net.cpp:148] Top shape: 100 (100)
I0715 12:52:15.187579 19421 net.cpp:156] Memory required for data: 628400
I0715 12:52:15.187584 19421 layer_factory.hpp:77] Creating layer slice_pair
I0715 12:52:15.187597 19421 net.cpp:91] Creating Layer slice_pair
I0715 12:52:15.187602 19421 net.cpp:425] slice_pair <- pair_data
I0715 12:52:15.187608 19421 net.cpp:399] slice_pair -> data
I0715 12:52:15.187618 19421 net.cpp:399] slice_pair -> data_p
I0715 12:52:15.187629 19421 net.cpp:141] Setting up slice_pair
I0715 12:52:15.187636 19421 net.cpp:148] Top shape: 100 1 28 28 (78400)
I0715 12:52:15.187643 19421 net.cpp:148] Top shape: 100 1 28 28 (78400)
I0715 12:52:15.187647 19421 net.cpp:156] Memory required for data: 1255600
I0715 12:52:15.187651 19421 layer_factory.hpp:77] Creating layer conv1
I0715 12:52:15.187667 19421 net.cpp:91] Creating Layer conv1
I0715 12:52:15.187672 19421 net.cpp:425] conv1 <- data
I0715 12:52:15.187680 19421 net.cpp:399] conv1 -> conv1
I0715 12:52:15.187747 19421 net.cpp:141] Setting up conv1
I0715 12:52:15.187760 19421 net.cpp:148] Top shape: 100 20 24 24 (1152000)
I0715 12:52:15.187765 19421 net.cpp:156] Memory required for data: 5863600
I0715 12:52:15.187778 19421 layer_factory.hpp:77] Creating layer pool1
I0715 12:52:15.187790 19421 net.cpp:91] Creating Layer pool1
I0715 12:52:15.187795 19421 net.cpp:425] pool1 <- conv1
I0715 12:52:15.187803 19421 net.cpp:399] pool1 -> pool1
I0715 12:52:15.187815 19421 net.cpp:141] Setting up pool1
I0715 12:52:15.187822 19421 net.cpp:148] Top shape: 100 20 12 12 (288000)
I0715 12:52:15.187826 19421 net.cpp:156] Memory required for data: 7015600
I0715 12:52:15.187831 19421 layer_factory.hpp:77] Creating layer conv2
I0715 12:52:15.187844 19421 net.cpp:91] Creating Layer conv2
I0715 12:52:15.187849 19421 net.cpp:425] conv2 <- pool1
I0715 12:52:15.187862 19421 net.cpp:399] conv2 -> conv2
I0715 12:52:15.188199 19421 net.cpp:141] Setting up conv2
I0715 12:52:15.188212 19421 net.cpp:148] Top shape: 100 50 8 8 (320000)
I0715 12:52:15.188217 19421 net.cpp:156] Memory required for data: 8295600
I0715 12:52:15.188230 19421 layer_factory.hpp:77] Creating layer pool2
I0715 12:52:15.188241 19421 net.cpp:91] Creating Layer pool2
I0715 12:52:15.188247 19421 net.cpp:425] pool2 <- conv2
I0715 12:52:15.188254 19421 net.cpp:399] pool2 -> pool2
I0715 12:52:15.188266 19421 net.cpp:141] Setting up pool2
I0715 12:52:15.188273 19421 net.cpp:148] Top shape: 100 50 4 4 (80000)
I0715 12:52:15.188278 19421 net.cpp:156] Memory required for data: 8615600
I0715 12:52:15.188283 19421 layer_factory.hpp:77] Creating layer ip1
I0715 12:52:15.188297 19421 net.cpp:91] Creating Layer ip1
I0715 12:52:15.188302 19421 net.cpp:425] ip1 <- pool2
I0715 12:52:15.188311 19421 net.cpp:399] ip1 -> ip1
I0715 12:52:15.193716 19421 net.cpp:141] Setting up ip1
I0715 12:52:15.193792 19421 net.cpp:148] Top shape: 100 500 (50000)
I0715 12:52:15.194783 19421 net.cpp:156] Memory required for data: 8815600
I0715 12:52:15.194818 19421 layer_factory.hpp:77] Creating layer relu1
I0715 12:52:15.194844 19421 net.cpp:91] Creating Layer relu1
I0715 12:52:15.194861 19421 net.cpp:425] relu1 <- ip1
I0715 12:52:15.194880 19421 net.cpp:386] relu1 -> ip1 (in-place)
I0715 12:52:15.194902 19421 net.cpp:141] Setting up relu1
I0715 12:52:15.194931 19421 net.cpp:148] Top shape: 100 500 (50000)
I0715 12:52:15.194958 19421 net.cpp:156] Memory required for data: 9015600
I0715 12:52:15.194973 19421 layer_factory.hpp:77] Creating layer ip2
I0715 12:52:15.195067 19421 net.cpp:91] Creating Layer ip2
I0715 12:52:15.195083 19421 net.cpp:425] ip2 <- ip1
I0715 12:52:15.195101 19421 net.cpp:399] ip2 -> ip2
I0715 12:52:15.195178 19421 net.cpp:141] Setting up ip2
I0715 12:52:15.195199 19421 net.cpp:148] Top shape: 100 10 (1000)
I0715 12:52:15.195211 19421 net.cpp:156] Memory required for data: 9019600
I0715 12:52:15.195227 19421 layer_factory.hpp:77] Creating layer feat
I0715 12:52:15.195245 19421 net.cpp:91] Creating Layer feat
I0715 12:52:15.195260 19421 net.cpp:425] feat <- ip2
I0715 12:52:15.195276 19421 net.cpp:399] feat -> feat
I0715 12:52:15.195298 19421 net.cpp:141] Setting up feat
I0715 12:52:15.195315 19421 net.cpp:148] Top shape: 100 2 (200)
I0715 12:52:15.195328 19421 net.cpp:156] Memory required for data: 9020400
I0715 12:52:15.195346 19421 layer_factory.hpp:77] Creating layer conv1_p
I0715 12:52:15.195368 19421 net.cpp:91] Creating Layer conv1_p
I0715 12:52:15.195381 19421 net.cpp:425] conv1_p <- data_p
I0715 12:52:15.195397 19421 net.cpp:399] conv1_p -> conv1_p
I0715 12:52:15.195437 19421 net.cpp:141] Setting up conv1_p
I0715 12:52:15.195456 19421 net.cpp:148] Top shape: 100 20 24 24 (1152000)
I0715 12:52:15.195468 19421 net.cpp:156] Memory required for data: 13628400
I0715 12:52:15.195482 19421 net.cpp:484] Sharing parameters 'conv1_w' owned by layer 'conv1', param index 0
I0715 12:52:15.195497 19421 net.cpp:484] Sharing parameters 'conv1_b' owned by layer 'conv1', param index 1
I0715 12:52:15.195510 19421 layer_factory.hpp:77] Creating layer pool1_p
I0715 12:52:15.195528 19421 net.cpp:91] Creating Layer pool1_p
I0715 12:52:15.195540 19421 net.cpp:425] pool1_p <- conv1_p
I0715 12:52:15.195637 19421 net.cpp:399] pool1_p -> pool1_p
I0715 12:52:15.195698 19421 net.cpp:141] Setting up pool1_p
I0715 12:52:15.195761 19421 net.cpp:148] Top shape: 100 20 12 12 (288000)
I0715 12:52:15.195852 19421 net.cpp:156] Memory required for data: 14780400
I0715 12:52:15.195878 19421 layer_factory.hpp:77] Creating layer conv2_p
I0715 12:52:15.195916 19421 net.cpp:91] Creating Layer conv2_p
I0715 12:52:15.195960 19421 net.cpp:425] conv2_p <- pool1_p
I0715 12:52:15.196022 19421 net.cpp:399] conv2_p -> conv2_p
I0715 12:52:15.196760 19421 net.cpp:141] Setting up conv2_p
I0715 12:52:15.200803 19421 net.cpp:148] Top shape: 100 50 8 8 (320000)
I0715 12:52:15.202625 19421 net.cpp:156] Memory required for data: 16060400
I0715 12:52:15.202667 19421 net.cpp:484] Sharing parameters 'conv2_w' owned by layer 'conv2', param index 0
I0715 12:52:15.202693 19421 net.cpp:484] Sharing parameters 'conv2_b' owned by layer 'conv2', param index 1
I0715 12:52:15.202713 19421 layer_factory.hpp:77] Creating layer pool2_p
I0715 12:52:15.202739 19421 net.cpp:91] Creating Layer pool2_p
I0715 12:52:15.202757 19421 net.cpp:425] pool2_p <- conv2_p
I0715 12:52:15.202785 19421 net.cpp:399] pool2_p -> pool2_p
I0715 12:52:15.202819 19421 net.cpp:141] Setting up pool2_p
I0715 12:52:15.202844 19421 net.cpp:148] Top shape: 100 50 4 4 (80000)
I0715 12:52:15.202859 19421 net.cpp:156] Memory required for data: 16380400
I0715 12:52:15.202874 19421 layer_factory.hpp:77] Creating layer ip1_p
I0715 12:52:15.202895 19421 net.cpp:91] Creating Layer ip1_p
I0715 12:52:15.202911 19421 net.cpp:425] ip1_p <- pool2_p
I0715 12:52:15.202997 19421 net.cpp:399] ip1_p -> ip1_p
I0715 12:52:15.206256 19421 net.cpp:141] Setting up ip1_p
I0715 12:52:15.208297 19421 net.cpp:148] Top shape: 100 500 (50000)
I0715 12:52:15.208349 19421 net.cpp:156] Memory required for data: 16580400
I0715 12:52:15.208366 19421 net.cpp:484] Sharing parameters 'ip1_w' owned by layer 'ip1', param index 0
I0715 12:52:15.208386 19421 net.cpp:484] Sharing parameters 'ip1_b' owned by layer 'ip1', param index 1
I0715 12:52:15.208392 19421 layer_factory.hpp:77] Creating layer relu1_p
I0715 12:52:15.208407 19421 net.cpp:91] Creating Layer relu1_p
I0715 12:52:15.208422 19421 net.cpp:425] relu1_p <- ip1_p
I0715 12:52:15.208452 19421 net.cpp:386] relu1_p -> ip1_p (in-place)
I0715 12:52:15.208477 19421 net.cpp:141] Setting up relu1_p
I0715 12:52:15.208483 19421 net.cpp:148] Top shape: 100 500 (50000)
I0715 12:52:15.208487 19421 net.cpp:156] Memory required for data: 16780400
I0715 12:52:15.208489 19421 layer_factory.hpp:77] Creating layer ip2_p
I0715 12:52:15.208505 19421 net.cpp:91] Creating Layer ip2_p
I0715 12:52:15.208523 19421 net.cpp:425] ip2_p <- ip1_p
I0715 12:52:15.208530 19421 net.cpp:399] ip2_p -> ip2_p
I0715 12:52:15.208595 19421 net.cpp:141] Setting up ip2_p
I0715 12:52:15.208600 19421 net.cpp:148] Top shape: 100 10 (1000)
I0715 12:52:15.208602 19421 net.cpp:156] Memory required for data: 16784400
I0715 12:52:15.208611 19421 net.cpp:484] Sharing parameters 'ip2_w' owned by layer 'ip2', param index 0
I0715 12:52:15.208627 19421 net.cpp:484] Sharing parameters 'ip2_b' owned by layer 'ip2', param index 1
I0715 12:52:15.208631 19421 layer_factory.hpp:77] Creating layer feat_p
I0715 12:52:15.208639 19421 net.cpp:91] Creating Layer feat_p
I0715 12:52:15.208642 19421 net.cpp:425] feat_p <- ip2_p
I0715 12:52:15.208647 19421 net.cpp:399] feat_p -> feat_p
I0715 12:52:15.208659 19421 net.cpp:141] Setting up feat_p
I0715 12:52:15.208663 19421 net.cpp:148] Top shape: 100 2 (200)
I0715 12:52:15.208667 19421 net.cpp:156] Memory required for data: 16785200
I0715 12:52:15.208669 19421 net.cpp:484] Sharing parameters 'feat_w' owned by layer 'feat', param index 0
I0715 12:52:15.208673 19421 net.cpp:484] Sharing parameters 'feat_b' owned by layer 'feat', param index 1
I0715 12:52:15.208675 19421 layer_factory.hpp:77] Creating layer concat
I0715 12:52:15.208684 19421 net.cpp:91] Creating Layer concat
I0715 12:52:15.208699 19421 net.cpp:425] concat <- feat
I0715 12:52:15.208703 19421 net.cpp:425] concat <- feat_p
I0715 12:52:15.208709 19421 net.cpp:399] concat -> comb
I0715 12:52:15.208715 19421 net.cpp:141] Setting up concat
I0715 12:52:15.208719 19421 net.cpp:148] Top shape: 100 4 (400)
I0715 12:52:15.208722 19421 net.cpp:156] Memory required for data: 16786800
I0715 12:52:15.208725 19421 layer_factory.hpp:77] Creating layer fc1
I0715 12:52:15.208731 19421 net.cpp:91] Creating Layer fc1
I0715 12:52:15.208734 19421 net.cpp:425] fc1 <- comb
I0715 12:52:15.208740 19421 net.cpp:399] fc1 -> fc1
I0715 12:52:15.208760 19421 net.cpp:141] Setting up fc1
I0715 12:52:15.208776 19421 net.cpp:148] Top shape: 100 100 (10000)
I0715 12:52:15.208780 19421 net.cpp:156] Memory required for data: 16826800
I0715 12:52:15.208784 19421 layer_factory.hpp:77] Creating layer relu1_fc1
I0715 12:52:15.208791 19421 net.cpp:91] Creating Layer relu1_fc1
I0715 12:52:15.208794 19421 net.cpp:425] relu1_fc1 <- fc1
I0715 12:52:15.208798 19421 net.cpp:386] relu1_fc1 -> fc1 (in-place)
I0715 12:52:15.208803 19421 net.cpp:141] Setting up relu1_fc1
I0715 12:52:15.208807 19421 net.cpp:148] Top shape: 100 100 (10000)
I0715 12:52:15.208811 19421 net.cpp:156] Memory required for data: 16866800
I0715 12:52:15.208813 19421 layer_factory.hpp:77] Creating layer fc2
I0715 12:52:15.208820 19421 net.cpp:91] Creating Layer fc2
I0715 12:52:15.208835 19421 net.cpp:425] fc2 <- fc1
I0715 12:52:15.208840 19421 net.cpp:399] fc2 -> fc2
I0715 12:52:15.208940 19421 net.cpp:141] Setting up fc2
I0715 12:52:15.208969 19421 net.cpp:148] Top shape: 100 50 (5000)
I0715 12:52:15.208972 19421 net.cpp:156] Memory required for data: 16886800
I0715 12:52:15.208981 19421 layer_factory.hpp:77] Creating layer relu2_fc2
I0715 12:52:15.208987 19421 net.cpp:91] Creating Layer relu2_fc2
I0715 12:52:15.208991 19421 net.cpp:425] relu2_fc2 <- fc2
I0715 12:52:15.208995 19421 net.cpp:386] relu2_fc2 -> fc2 (in-place)
I0715 12:52:15.209002 19421 net.cpp:141] Setting up relu2_fc2
I0715 12:52:15.209005 19421 net.cpp:148] Top shape: 100 50 (5000)
I0715 12:52:15.209007 19421 net.cpp:156] Memory required for data: 16906800
I0715 12:52:15.209010 19421 layer_factory.hpp:77] Creating layer fc3
I0715 12:52:15.209017 19421 net.cpp:91] Creating Layer fc3
I0715 12:52:15.209019 19421 net.cpp:425] fc3 <- fc2
I0715 12:52:15.209041 19421 net.cpp:399] fc3 -> fc3
I0715 12:52:15.209055 19421 net.cpp:141] Setting up fc3
I0715 12:52:15.209059 19421 net.cpp:148] Top shape: 100 2 (200)
I0715 12:52:15.209062 19421 net.cpp:156] Memory required for data: 16907600
I0715 12:52:15.209066 19421 layer_factory.hpp:77] Creating layer fc3_fc3_0_split
I0715 12:52:15.209071 19421 net.cpp:91] Creating Layer fc3_fc3_0_split
I0715 12:52:15.209074 19421 net.cpp:425] fc3_fc3_0_split <- fc3
I0715 12:52:15.209079 19421 net.cpp:399] fc3_fc3_0_split -> fc3_fc3_0_split_0
I0715 12:52:15.209084 19421 net.cpp:399] fc3_fc3_0_split -> fc3_fc3_0_split_1
I0715 12:52:15.209091 19421 net.cpp:141] Setting up fc3_fc3_0_split
I0715 12:52:15.209095 19421 net.cpp:148] Top shape: 100 2 (200)
I0715 12:52:15.209100 19421 net.cpp:148] Top shape: 100 2 (200)
I0715 12:52:15.209115 19421 net.cpp:156] Memory required for data: 16909200
I0715 12:52:15.209118 19421 layer_factory.hpp:77] Creating layer loss
I0715 12:52:15.209125 19421 net.cpp:91] Creating Layer loss
I0715 12:52:15.209127 19421 net.cpp:425] loss <- fc3_fc3_0_split_0
I0715 12:52:15.209131 19421 net.cpp:425] loss <- label_pair_data_1_split_0
I0715 12:52:15.209137 19421 net.cpp:399] loss -> loss
I0715 12:52:15.209146 19421 layer_factory.hpp:77] Creating layer loss
I0715 12:52:15.209158 19421 net.cpp:141] Setting up loss
I0715 12:52:15.209177 19421 net.cpp:148] Top shape: (1)
I0715 12:52:15.209180 19421 net.cpp:151]     with loss weight 1
I0715 12:52:15.209192 19421 net.cpp:156] Memory required for data: 16909204
I0715 12:52:15.209194 19421 layer_factory.hpp:77] Creating layer accuracy
I0715 12:52:15.209200 19421 net.cpp:91] Creating Layer accuracy
I0715 12:52:15.209203 19421 net.cpp:425] accuracy <- fc3_fc3_0_split_1
I0715 12:52:15.209206 19421 net.cpp:425] accuracy <- label_pair_data_1_split_1
I0715 12:52:15.209211 19421 net.cpp:399] accuracy -> accuracy
I0715 12:52:15.209229 19421 net.cpp:141] Setting up accuracy
I0715 12:52:15.209234 19421 net.cpp:148] Top shape: (1)
I0715 12:52:15.209238 19421 net.cpp:156] Memory required for data: 16909208
I0715 12:52:15.209240 19421 net.cpp:219] accuracy does not need backward computation.
I0715 12:52:15.209244 19421 net.cpp:217] loss needs backward computation.
I0715 12:52:15.209255 19421 net.cpp:217] fc3_fc3_0_split needs backward computation.
I0715 12:52:15.209259 19421 net.cpp:217] fc3 needs backward computation.
I0715 12:52:15.209261 19421 net.cpp:217] relu2_fc2 needs backward computation.
I0715 12:52:15.209264 19421 net.cpp:217] fc2 needs backward computation.
I0715 12:52:15.209267 19421 net.cpp:217] relu1_fc1 needs backward computation.
I0715 12:52:15.209270 19421 net.cpp:217] fc1 needs backward computation.
I0715 12:52:15.209272 19421 net.cpp:217] concat needs backward computation.
I0715 12:52:15.209276 19421 net.cpp:217] feat_p needs backward computation.
I0715 12:52:15.209288 19421 net.cpp:217] ip2_p needs backward computation.
I0715 12:52:15.209291 19421 net.cpp:217] relu1_p needs backward computation.
I0715 12:52:15.209295 19421 net.cpp:217] ip1_p needs backward computation.
I0715 12:52:15.209297 19421 net.cpp:217] pool2_p needs backward computation.
I0715 12:52:15.209311 19421 net.cpp:217] conv2_p needs backward computation.
I0715 12:52:15.209313 19421 net.cpp:217] pool1_p needs backward computation.
I0715 12:52:15.209316 19421 net.cpp:217] conv1_p needs backward computation.
I0715 12:52:15.209321 19421 net.cpp:217] feat needs backward computation.
I0715 12:52:15.209324 19421 net.cpp:217] ip2 needs backward computation.
I0715 12:52:15.209327 19421 net.cpp:217] relu1 needs backward computation.
I0715 12:52:15.209331 19421 net.cpp:217] ip1 needs backward computation.
I0715 12:52:15.209333 19421 net.cpp:217] pool2 needs backward computation.
I0715 12:52:15.209336 19421 net.cpp:217] conv2 needs backward computation.
I0715 12:52:15.209338 19421 net.cpp:217] pool1 needs backward computation.
I0715 12:52:15.209342 19421 net.cpp:217] conv1 needs backward computation.
I0715 12:52:15.209345 19421 net.cpp:219] slice_pair does not need backward computation.
I0715 12:52:15.209357 19421 net.cpp:219] label_pair_data_1_split does not need backward computation.
I0715 12:52:15.209362 19421 net.cpp:219] pair_data does not need backward computation.
I0715 12:52:15.209363 19421 net.cpp:261] This network produces output accuracy
I0715 12:52:15.209367 19421 net.cpp:261] This network produces output loss
I0715 12:52:15.209391 19421 net.cpp:274] Network initialization done.
I0715 12:52:15.209617 19421 solver.cpp:60] Solver scaffolding done.
I0715 12:52:15.209668 19421 caffe.cpp:219] Starting Optimization
I0715 12:52:15.209672 19421 solver.cpp:279] Solving mnist_siamese_train_test_sim
I0715 12:52:15.209676 19421 solver.cpp:280] Learning Rate Policy: inv
I0715 12:52:15.210062 19421 solver.cpp:337] Iteration 0, Testing net (#0)
I0715 12:52:26.011574 19421 solver.cpp:404]     Test net output #0: accuracy = 0.5029
I0715 12:52:26.011638 19421 solver.cpp:404]     Test net output #1: loss = 0.707631 (* 1 = 0.707631 loss)
I0715 12:52:26.210275 19421 solver.cpp:228] Iteration 0, loss = 0.849029
I0715 12:52:26.210338 19421 solver.cpp:244]     Train net output #0: loss = 0.849029 (* 1 = 0.849029 loss)
I0715 12:52:26.210386 19421 sgd_solver.cpp:106] Iteration 0, lr = 0.01
I0715 12:52:43.847892 19421 solver.cpp:337] Iteration 100, Testing net (#0)
I0715 12:52:54.737681 19421 solver.cpp:404]     Test net output #0: accuracy = 0.4972
I0715 12:52:54.737936 19421 solver.cpp:404]     Test net output #1: loss = 0.999383 (* 1 = 0.999383 loss)
I0715 12:52:54.933732 19421 solver.cpp:228] Iteration 100, loss = 0.293539
I0715 12:52:54.933964 19421 solver.cpp:244]     Train net output #0: loss = 0.293539 (* 1 = 0.293539 loss)
I0715 12:52:54.934048 19421 sgd_solver.cpp:106] Iteration 100, lr = 0.00992565
I0715 12:53:11.476758 19421 solver.cpp:337] Iteration 200, Testing net (#0)
I0715 12:53:21.971196 19421 solver.cpp:404]     Test net output #0: accuracy = 0.4973
I0715 12:53:21.971254 19421 solver.cpp:404]     Test net output #1: loss = 0.985138 (* 1 = 0.985138 loss)
I0715 12:53:22.194892 19421 solver.cpp:228] Iteration 200, loss = 0.4152
I0715 12:53:22.194955 19421 solver.cpp:244]     Train net output #0: loss = 0.4152 (* 1 = 0.4152 loss)
I0715 12:53:22.194968 19421 sgd_solver.cpp:106] Iteration 200, lr = 0.00985258
I0715 12:53:38.413835 19421 solver.cpp:337] Iteration 300, Testing net (#0)
I0715 12:53:49.534584 19421 solver.cpp:404]     Test net output #0: accuracy = 0.569
I0715 12:53:49.534832 19421 solver.cpp:404]     Test net output #1: loss = 0.742923 (* 1 = 0.742923 loss)
I0715 12:53:49.733283 19421 solver.cpp:228] Iteration 300, loss = 0.206726
I0715 12:53:49.733599 19421 solver.cpp:244]     Train net output #0: loss = 0.206726 (* 1 = 0.206726 loss)
I0715 12:53:49.733621 19421 sgd_solver.cpp:106] Iteration 300, lr = 0.00978075
I0715 12:54:07.797915 19421 solver.cpp:337] Iteration 400, Testing net (#0)
I0715 12:54:19.154191 19421 solver.cpp:404]     Test net output #0: accuracy = 0.5977
I0715 12:54:19.154575 19421 solver.cpp:404]     Test net output #1: loss = 0.916251 (* 1 = 0.916251 loss)
I0715 12:54:19.353075 19421 solver.cpp:228] Iteration 400, loss = 0.188941
I0715 12:54:19.353132 19421 solver.cpp:244]     Train net output #0: loss = 0.188941 (* 1 = 0.188941 loss)
I0715 12:54:19.353143 19421 sgd_solver.cpp:106] Iteration 400, lr = 0.00971013
I0715 12:54:37.254881 19421 solver.cpp:337] Iteration 500, Testing net (#0)
I0715 12:54:50.393847 19421 solver.cpp:404]     Test net output #0: accuracy = 0.6923
I0715 12:54:50.394076 19421 solver.cpp:404]     Test net output #1: loss = 0.62556 (* 1 = 0.62556 loss)
I0715 12:54:50.620726 19421 solver.cpp:228] Iteration 500, loss = 0.161062
I0715 12:54:50.620785 19421 solver.cpp:244]     Train net output #0: loss = 0.161062 (* 1 = 0.161062 loss)
I0715 12:54:50.620797 19421 sgd_solver.cpp:106] Iteration 500, lr = 0.00964069
I0715 12:55:08.412335 19421 solver.cpp:337] Iteration 600, Testing net (#0)
I0715 12:55:20.181088 19421 solver.cpp:404]     Test net output #0: accuracy = 0.6955
I0715 12:55:20.181335 19421 solver.cpp:404]     Test net output #1: loss = 0.663368 (* 1 = 0.663368 loss)
I0715 12:55:20.395380 19421 solver.cpp:228] Iteration 600, loss = 0.122836
I0715 12:55:20.395762 19421 solver.cpp:244]     Train net output #0: loss = 0.122836 (* 1 = 0.122836 loss)
I0715 12:55:20.395851 19421 sgd_solver.cpp:106] Iteration 600, lr = 0.0095724
I0715 12:55:39.653962 19421 solver.cpp:337] Iteration 700, Testing net (#0)
I0715 12:55:49.885334 19421 solver.cpp:404]     Test net output #0: accuracy = 0.6953
I0715 12:55:49.885396 19421 solver.cpp:404]     Test net output #1: loss = 0.692273 (* 1 = 0.692273 loss)
I0715 12:55:50.066694 19421 solver.cpp:228] Iteration 700, loss = 0.0724862
I0715 12:55:50.066756 19421 solver.cpp:244]     Train net output #0: loss = 0.0724862 (* 1 = 0.0724862 loss)
I0715 12:55:50.066767 19421 sgd_solver.cpp:106] Iteration 700, lr = 0.00950522
I0715 12:56:08.406422 19421 solver.cpp:337] Iteration 800, Testing net (#0)
I0715 12:56:19.326395 19421 solver.cpp:404]     Test net output #0: accuracy = 0.6904
I0715 12:56:19.326452 19421 solver.cpp:404]     Test net output #1: loss = 0.755087 (* 1 = 0.755087 loss)
I0715 12:56:19.532012 19421 solver.cpp:228] Iteration 800, loss = 0.108319
I0715 12:56:19.532074 19421 solver.cpp:244]     Train net output #0: loss = 0.108319 (* 1 = 0.108319 loss)
I0715 12:56:19.532086 19421 sgd_solver.cpp:106] Iteration 800, lr = 0.00943913
I0715 12:56:38.958745 19421 solver.cpp:337] Iteration 900, Testing net (#0)
I0715 12:56:50.378105 19421 solver.cpp:404]     Test net output #0: accuracy = 0.7279
I0715 12:56:50.378211 19421 solver.cpp:404]     Test net output #1: loss = 0.852956 (* 1 = 0.852956 loss)
I0715 12:56:50.572640 19421 solver.cpp:228] Iteration 900, loss = 0.0139892
I0715 12:56:50.572700 19421 solver.cpp:244]     Train net output #0: loss = 0.0139893 (* 1 = 0.0139893 loss)
I0715 12:56:50.572712 19421 sgd_solver.cpp:106] Iteration 900, lr = 0.00937411
I0715 12:57:10.170147 19421 solver.cpp:454] Snapshotting to binary proto file examples/siamese/My_mnist_siamese_0to6_t89_feat_2_sim_iter_1000.caffemodel
I0715 12:57:10.202397 19421 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/siamese/My_mnist_siamese_0to6_t89_feat_2_sim_iter_1000.solverstate
I0715 12:57:10.215278 19421 solver.cpp:337] Iteration 1000, Testing net (#0)
I0715 12:57:20.789082 19421 solver.cpp:404]     Test net output #0: accuracy = 0.6734
I0715 12:57:20.789319 19421 solver.cpp:404]     Test net output #1: loss = 0.926085 (* 1 = 0.926085 loss)
I0715 12:57:20.976317 19421 solver.cpp:228] Iteration 1000, loss = 0.0811555
I0715 12:57:20.976454 19421 solver.cpp:244]     Train net output #0: loss = 0.0811556 (* 1 = 0.0811556 loss)
I0715 12:57:20.976531 19421 sgd_solver.cpp:106] Iteration 1000, lr = 0.00931012
I0715 12:57:37.661257 19421 solver.cpp:337] Iteration 1100, Testing net (#0)
I0715 12:57:48.661798 19421 solver.cpp:404]     Test net output #0: accuracy = 0.7191
I0715 12:57:48.662003 19421 solver.cpp:404]     Test net output #1: loss = 0.758193 (* 1 = 0.758193 loss)
I0715 12:57:48.873010 19421 solver.cpp:228] Iteration 1100, loss = 0.0848384
I0715 12:57:48.873102 19421 solver.cpp:244]     Train net output #0: loss = 0.0848385 (* 1 = 0.0848385 loss)
I0715 12:57:48.873126 19421 sgd_solver.cpp:106] Iteration 1100, lr = 0.00924715
I0715 12:58:06.380125 19421 solver.cpp:337] Iteration 1200, Testing net (#0)
I0715 12:58:17.567939 19421 solver.cpp:404]     Test net output #0: accuracy = 0.6753
I0715 12:58:17.567992 19421 solver.cpp:404]     Test net output #1: loss = 1.04702 (* 1 = 1.04702 loss)
I0715 12:58:17.762501 19421 solver.cpp:228] Iteration 1200, loss = 0.175107
I0715 12:58:17.762742 19421 solver.cpp:244]     Train net output #0: loss = 0.175107 (* 1 = 0.175107 loss)
I0715 12:58:17.762827 19421 sgd_solver.cpp:106] Iteration 1200, lr = 0.00918515
I0715 12:58:37.563699 19421 solver.cpp:337] Iteration 1300, Testing net (#0)
I0715 12:58:50.843194 19421 solver.cpp:404]     Test net output #0: accuracy = 0.7237
I0715 12:58:50.843387 19421 solver.cpp:404]     Test net output #1: loss = 0.696973 (* 1 = 0.696973 loss)
I0715 12:58:51.048804 19421 solver.cpp:228] Iteration 1300, loss = 0.0460642
I0715 12:58:51.048970 19421 solver.cpp:244]     Train net output #0: loss = 0.0460642 (* 1 = 0.0460642 loss)
I0715 12:58:51.049010 19421 sgd_solver.cpp:106] Iteration 1300, lr = 0.00912412
I0715 12:59:13.036588 19421 solver.cpp:337] Iteration 1400, Testing net (#0)
I0715 12:59:24.882452 19421 solver.cpp:404]     Test net output #0: accuracy = 0.723
I0715 12:59:24.882793 19421 solver.cpp:404]     Test net output #1: loss = 0.661383 (* 1 = 0.661383 loss)
I0715 12:59:25.091298 19421 solver.cpp:228] Iteration 1400, loss = 0.0308161
I0715 12:59:25.091503 19421 solver.cpp:244]     Train net output #0: loss = 0.0308162 (* 1 = 0.0308162 loss)
I0715 12:59:25.091550 19421 sgd_solver.cpp:106] Iteration 1400, lr = 0.00906403
I0715 12:59:42.170339 19421 solver.cpp:337] Iteration 1500, Testing net (#0)
I0715 12:59:53.029455 19421 solver.cpp:404]     Test net output #0: accuracy = 0.7248
I0715 12:59:53.029716 19421 solver.cpp:404]     Test net output #1: loss = 0.709294 (* 1 = 0.709294 loss)
I0715 12:59:53.225507 19421 solver.cpp:228] Iteration 1500, loss = 0.0204948
I0715 12:59:53.225744 19421 solver.cpp:244]     Train net output #0: loss = 0.0204949 (* 1 = 0.0204949 loss)
I0715 12:59:53.225951 19421 sgd_solver.cpp:106] Iteration 1500, lr = 0.00900485
I0715 13:00:11.222815 19421 solver.cpp:337] Iteration 1600, Testing net (#0)
I0715 13:00:22.472370 19421 solver.cpp:404]     Test net output #0: accuracy = 0.7506
I0715 13:00:22.472453 19421 solver.cpp:404]     Test net output #1: loss = 0.701142 (* 1 = 0.701142 loss)
I0715 13:00:22.691480 19421 solver.cpp:228] Iteration 1600, loss = 0.0248698
I0715 13:00:22.691550 19421 solver.cpp:244]     Train net output #0: loss = 0.02487 (* 1 = 0.02487 loss)
I0715 13:00:22.691570 19421 sgd_solver.cpp:106] Iteration 1600, lr = 0.00894657
I0715 13:00:40.981758 19421 solver.cpp:337] Iteration 1700, Testing net (#0)
I0715 13:00:52.168485 19421 solver.cpp:404]     Test net output #0: accuracy = 0.731
I0715 13:00:52.168727 19421 solver.cpp:404]     Test net output #1: loss = 0.7423 (* 1 = 0.7423 loss)
I0715 13:00:52.363699 19421 solver.cpp:228] Iteration 1700, loss = 0.0132814
I0715 13:00:52.363757 19421 solver.cpp:244]     Train net output #0: loss = 0.0132816 (* 1 = 0.0132816 loss)
I0715 13:00:52.363768 19421 sgd_solver.cpp:106] Iteration 1700, lr = 0.00888916
I0715 13:01:08.189584 19421 solver.cpp:337] Iteration 1800, Testing net (#0)
I0715 13:01:18.305902 19421 solver.cpp:404]     Test net output #0: accuracy = 0.6894
I0715 13:01:18.306510 19421 solver.cpp:404]     Test net output #1: loss = 0.86003 (* 1 = 0.86003 loss)
I0715 13:01:18.532456 19421 solver.cpp:228] Iteration 1800, loss = 0.0160806
I0715 13:01:18.532568 19421 solver.cpp:244]     Train net output #0: loss = 0.0160807 (* 1 = 0.0160807 loss)
I0715 13:01:18.532583 19421 sgd_solver.cpp:106] Iteration 1800, lr = 0.0088326
I0715 13:01:37.781635 19421 solver.cpp:337] Iteration 1900, Testing net (#0)
I0715 13:01:48.165263 19421 solver.cpp:404]     Test net output #0: accuracy = 0.7558
I0715 13:01:48.165326 19421 solver.cpp:404]     Test net output #1: loss = 0.750303 (* 1 = 0.750303 loss)
I0715 13:01:48.359190 19421 solver.cpp:228] Iteration 1900, loss = 0.0305333
I0715 13:01:48.362792 19421 solver.cpp:244]     Train net output #0: loss = 0.0305334 (* 1 = 0.0305334 loss)
I0715 13:01:48.362812 19421 sgd_solver.cpp:106] Iteration 1900, lr = 0.00877687
I0715 13:02:04.869655 19421 solver.cpp:454] Snapshotting to binary proto file examples/siamese/My_mnist_siamese_0to6_t89_feat_2_sim_iter_2000.caffemodel
I0715 13:02:04.880059 19421 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/siamese/My_mnist_siamese_0to6_t89_feat_2_sim_iter_2000.solverstate
I0715 13:02:04.882951 19421 solver.cpp:337] Iteration 2000, Testing net (#0)
I0715 13:02:15.295718 19421 solver.cpp:404]     Test net output #0: accuracy = 0.7302
I0715 13:02:15.295778 19421 solver.cpp:404]     Test net output #1: loss = 0.869583 (* 1 = 0.869583 loss)
I0715 13:02:15.492180 19421 solver.cpp:228] Iteration 2000, loss = 0.0181593
I0715 13:02:15.492274 19421 solver.cpp:244]     Train net output #0: loss = 0.0181595 (* 1 = 0.0181595 loss)
I0715 13:02:15.492290 19421 sgd_solver.cpp:106] Iteration 2000, lr = 0.00872196
I0715 13:02:31.887781 19421 solver.cpp:337] Iteration 2100, Testing net (#0)
I0715 13:02:42.210372 19421 solver.cpp:404]     Test net output #0: accuracy = 0.7028
I0715 13:02:42.210508 19421 solver.cpp:404]     Test net output #1: loss = 0.995234 (* 1 = 0.995234 loss)
I0715 13:02:42.402003 19421 solver.cpp:228] Iteration 2100, loss = 0.0338342
I0715 13:02:42.402139 19421 solver.cpp:244]     Train net output #0: loss = 0.0338343 (* 1 = 0.0338343 loss)
I0715 13:02:42.402169 19421 sgd_solver.cpp:106] Iteration 2100, lr = 0.00866784
I0715 13:02:58.787279 19421 solver.cpp:337] Iteration 2200, Testing net (#0)
I0715 13:03:09.116142 19421 solver.cpp:404]     Test net output #0: accuracy = 0.7483
I0715 13:03:09.116282 19421 solver.cpp:404]     Test net output #1: loss = 0.708263 (* 1 = 0.708263 loss)
I0715 13:03:09.310987 19421 solver.cpp:228] Iteration 2200, loss = 0.180941
I0715 13:03:09.311113 19421 solver.cpp:244]     Train net output #0: loss = 0.180941 (* 1 = 0.180941 loss)
I0715 13:03:09.311141 19421 sgd_solver.cpp:106] Iteration 2200, lr = 0.0086145
I0715 13:03:25.789942 19421 solver.cpp:337] Iteration 2300, Testing net (#0)
I0715 13:03:36.156888 19421 solver.cpp:404]     Test net output #0: accuracy = 0.7276
I0715 13:03:36.157011 19421 solver.cpp:404]     Test net output #1: loss = 0.899988 (* 1 = 0.899988 loss)
I0715 13:03:36.355698 19421 solver.cpp:228] Iteration 2300, loss = 0.00841811
I0715 13:03:36.355860 19421 solver.cpp:244]     Train net output #0: loss = 0.00841828 (* 1 = 0.00841828 loss)
I0715 13:03:36.355903 19421 sgd_solver.cpp:106] Iteration 2300, lr = 0.00856192
I0715 13:03:52.772778 19421 solver.cpp:337] Iteration 2400, Testing net (#0)
I0715 13:04:03.178014 19421 solver.cpp:404]     Test net output #0: accuracy = 0.7079
I0715 13:04:03.178072 19421 solver.cpp:404]     Test net output #1: loss = 0.889789 (* 1 = 0.889789 loss)
I0715 13:04:03.368589 19421 solver.cpp:228] Iteration 2400, loss = 0.00818271
I0715 13:04:03.368649 19421 solver.cpp:244]     Train net output #0: loss = 0.0081829 (* 1 = 0.0081829 loss)
I0715 13:04:03.368662 19421 sgd_solver.cpp:106] Iteration 2400, lr = 0.00851008
I0715 13:04:19.783493 19421 solver.cpp:337] Iteration 2500, Testing net (#0)
I0715 13:04:30.176048 19421 solver.cpp:404]     Test net output #0: accuracy = 0.715
I0715 13:04:30.176380 19421 solver.cpp:404]     Test net output #1: loss = 1.05655 (* 1 = 1.05655 loss)
I0715 13:04:30.383950 19421 solver.cpp:228] Iteration 2500, loss = 0.0287756
I0715 13:04:30.384090 19421 solver.cpp:244]     Train net output #0: loss = 0.0287758 (* 1 = 0.0287758 loss)
I0715 13:04:30.384131 19421 sgd_solver.cpp:106] Iteration 2500, lr = 0.00845897
I0715 13:04:46.927073 19421 solver.cpp:337] Iteration 2600, Testing net (#0)
I0715 13:04:57.382915 19421 solver.cpp:404]     Test net output #0: accuracy = 0.7272
I0715 13:04:57.382974 19421 solver.cpp:404]     Test net output #1: loss = 0.746433 (* 1 = 0.746433 loss)
I0715 13:04:57.572008 19421 solver.cpp:228] Iteration 2600, loss = 0.0436262
I0715 13:04:57.572068 19421 solver.cpp:244]     Train net output #0: loss = 0.0436264 (* 1 = 0.0436264 loss)
I0715 13:04:57.572080 19421 sgd_solver.cpp:106] Iteration 2600, lr = 0.00840857
I0715 13:05:14.072770 19421 solver.cpp:337] Iteration 2700, Testing net (#0)
I0715 13:05:24.439371 19421 solver.cpp:404]     Test net output #0: accuracy = 0.7473
I0715 13:05:24.439429 19421 solver.cpp:404]     Test net output #1: loss = 0.774498 (* 1 = 0.774498 loss)
I0715 13:05:24.634006 19421 solver.cpp:228] Iteration 2700, loss = 0.0147849
I0715 13:05:24.634064 19421 solver.cpp:244]     Train net output #0: loss = 0.0147851 (* 1 = 0.0147851 loss)
I0715 13:05:24.634078 19421 sgd_solver.cpp:106] Iteration 2700, lr = 0.00835886
I0715 13:05:41.082726 19421 solver.cpp:337] Iteration 2800, Testing net (#0)
I0715 13:05:51.379071 19421 solver.cpp:404]     Test net output #0: accuracy = 0.7079
I0715 13:05:51.379319 19421 solver.cpp:404]     Test net output #1: loss = 1.12366 (* 1 = 1.12366 loss)
I0715 13:05:51.565991 19421 solver.cpp:228] Iteration 2800, loss = 0.000832377
I0715 13:05:51.566092 19421 solver.cpp:244]     Train net output #0: loss = 0.000832562 (* 1 = 0.000832562 loss)
I0715 13:05:51.566108 19421 sgd_solver.cpp:106] Iteration 2800, lr = 0.00830984
I0715 13:06:08.062000 19421 solver.cpp:337] Iteration 2900, Testing net (#0)
I0715 13:06:18.433543 19421 solver.cpp:404]     Test net output #0: accuracy = 0.6957
I0715 13:06:18.433604 19421 solver.cpp:404]     Test net output #1: loss = 0.927339 (* 1 = 0.927339 loss)
I0715 13:06:18.624076 19421 solver.cpp:228] Iteration 2900, loss = 0.03013
I0715 13:06:18.624136 19421 solver.cpp:244]     Train net output #0: loss = 0.0301302 (* 1 = 0.0301302 loss)
I0715 13:06:18.624147 19421 sgd_solver.cpp:106] Iteration 2900, lr = 0.00826148
I0715 13:06:36.515301 19421 solver.cpp:454] Snapshotting to binary proto file examples/siamese/My_mnist_siamese_0to6_t89_feat_2_sim_iter_3000.caffemodel
I0715 13:06:36.527061 19421 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/siamese/My_mnist_siamese_0to6_t89_feat_2_sim_iter_3000.solverstate
I0715 13:06:36.530889 19421 solver.cpp:337] Iteration 3000, Testing net (#0)
I0715 13:06:49.293541 19421 solver.cpp:404]     Test net output #0: accuracy = 0.6804
I0715 13:06:49.293620 19421 solver.cpp:404]     Test net output #1: loss = 1.17664 (* 1 = 1.17664 loss)
I0715 13:06:49.496896 19421 solver.cpp:228] Iteration 3000, loss = 0.00651705
I0715 13:06:49.496978 19421 solver.cpp:244]     Train net output #0: loss = 0.00651724 (* 1 = 0.00651724 loss)
I0715 13:06:49.496990 19421 sgd_solver.cpp:106] Iteration 3000, lr = 0.00821377
I0715 13:07:09.640724 19421 solver.cpp:337] Iteration 3100, Testing net (#0)
I0715 13:07:20.580641 19421 solver.cpp:404]     Test net output #0: accuracy = 0.7179
I0715 13:07:20.580858 19421 solver.cpp:404]     Test net output #1: loss = 1.29592 (* 1 = 1.29592 loss)
I0715 13:07:20.797344 19421 solver.cpp:228] Iteration 3100, loss = 0.0825264
I0715 13:07:20.797422 19421 solver.cpp:244]     Train net output #0: loss = 0.0825267 (* 1 = 0.0825267 loss)
I0715 13:07:20.797438 19421 sgd_solver.cpp:106] Iteration 3100, lr = 0.0081667
I0715 13:07:37.189030 19421 solver.cpp:337] Iteration 3200, Testing net (#0)
I0715 13:07:47.641553 19421 solver.cpp:404]     Test net output #0: accuracy = 0.6726
I0715 13:07:47.641903 19421 solver.cpp:404]     Test net output #1: loss = 1.03121 (* 1 = 1.03121 loss)
I0715 13:07:47.835227 19421 solver.cpp:228] Iteration 3200, loss = 0.0114799
I0715 13:07:47.835309 19421 solver.cpp:244]     Train net output #0: loss = 0.0114801 (* 1 = 0.0114801 loss)
I0715 13:07:47.835321 19421 sgd_solver.cpp:106] Iteration 3200, lr = 0.00812025
I0715 13:08:04.350741 19421 solver.cpp:337] Iteration 3300, Testing net (#0)
I0715 13:08:14.717195 19421 solver.cpp:404]     Test net output #0: accuracy = 0.7439
I0715 13:08:14.717277 19421 solver.cpp:404]     Test net output #1: loss = 1.12558 (* 1 = 1.12558 loss)
I0715 13:08:14.906311 19421 solver.cpp:228] Iteration 3300, loss = 0.00155877
I0715 13:08:14.906419 19421 solver.cpp:244]     Train net output #0: loss = 0.00155898 (* 1 = 0.00155898 loss)
I0715 13:08:14.906438 19421 sgd_solver.cpp:106] Iteration 3300, lr = 0.00807442
I0715 13:08:32.781672 19421 solver.cpp:337] Iteration 3400, Testing net (#0)
I0715 13:08:42.892982 19421 solver.cpp:404]     Test net output #0: accuracy = 0.7353
I0715 13:08:42.893043 19421 solver.cpp:404]     Test net output #1: loss = 1.00895 (* 1 = 1.00895 loss)
I0715 13:08:43.085387 19421 solver.cpp:228] Iteration 3400, loss = 0.00335522
I0715 13:08:43.085636 19421 solver.cpp:244]     Train net output #0: loss = 0.00335543 (* 1 = 0.00335543 loss)
I0715 13:08:43.085724 19421 sgd_solver.cpp:106] Iteration 3400, lr = 0.00802918
I0715 13:09:00.160569 19421 solver.cpp:337] Iteration 3500, Testing net (#0)
I0715 13:09:12.410075 19421 solver.cpp:404]     Test net output #0: accuracy = 0.7039
I0715 13:09:12.410208 19421 solver.cpp:404]     Test net output #1: loss = 1.21128 (* 1 = 1.21128 loss)
I0715 13:09:12.613255 19421 solver.cpp:228] Iteration 3500, loss = 0.000115373
I0715 13:09:12.613500 19421 solver.cpp:244]     Train net output #0: loss = 0.000115578 (* 1 = 0.000115578 loss)
I0715 13:09:12.613587 19421 sgd_solver.cpp:106] Iteration 3500, lr = 0.00798454
I0715 13:09:28.350033 19421 solver.cpp:337] Iteration 3600, Testing net (#0)
I0715 13:09:38.348896 19421 solver.cpp:404]     Test net output #0: accuracy = 0.694
I0715 13:09:38.348953 19421 solver.cpp:404]     Test net output #1: loss = 0.973366 (* 1 = 0.973366 loss)
I0715 13:09:38.534689 19421 solver.cpp:228] Iteration 3600, loss = 0.0142914
I0715 13:09:38.534750 19421 solver.cpp:244]     Train net output #0: loss = 0.0142916 (* 1 = 0.0142916 loss)
I0715 13:09:38.534761 19421 sgd_solver.cpp:106] Iteration 3600, lr = 0.00794046
I0715 13:09:55.620800 19421 solver.cpp:337] Iteration 3700, Testing net (#0)
I0715 13:10:06.272300 19421 solver.cpp:404]     Test net output #0: accuracy = 0.7036
I0715 13:10:06.272354 19421 solver.cpp:404]     Test net output #1: loss = 1.24176 (* 1 = 1.24176 loss)
I0715 13:10:06.467350 19421 solver.cpp:228] Iteration 3700, loss = 0.0565497
I0715 13:10:06.467449 19421 solver.cpp:244]     Train net output #0: loss = 0.0565499 (* 1 = 0.0565499 loss)
I0715 13:10:06.467468 19421 sgd_solver.cpp:106] Iteration 3700, lr = 0.00789695
I0715 13:10:23.155396 19421 solver.cpp:337] Iteration 3800, Testing net (#0)
I0715 13:10:33.619103 19421 solver.cpp:404]     Test net output #0: accuracy = 0.703
I0715 13:10:33.619189 19421 solver.cpp:404]     Test net output #1: loss = 0.93676 (* 1 = 0.93676 loss)
I0715 13:10:33.809249 19421 solver.cpp:228] Iteration 3800, loss = 0.00353795
I0715 13:10:33.809312 19421 solver.cpp:244]     Train net output #0: loss = 0.00353812 (* 1 = 0.00353812 loss)
I0715 13:10:33.809325 19421 sgd_solver.cpp:106] Iteration 3800, lr = 0.007854
I0715 13:10:49.743939 19421 solver.cpp:337] Iteration 3900, Testing net (#0)
I0715 13:10:59.739514 19421 solver.cpp:404]     Test net output #0: accuracy = 0.7499
I0715 13:10:59.739579 19421 solver.cpp:404]     Test net output #1: loss = 0.953355 (* 1 = 0.953355 loss)
I0715 13:10:59.931576 19421 solver.cpp:228] Iteration 3900, loss = 0.00137629
I0715 13:10:59.931634 19421 solver.cpp:244]     Train net output #0: loss = 0.00137646 (* 1 = 0.00137646 loss)
I0715 13:10:59.931645 19421 sgd_solver.cpp:106] Iteration 3900, lr = 0.00781158
I0715 13:11:15.872180 19421 solver.cpp:454] Snapshotting to binary proto file examples/siamese/My_mnist_siamese_0to6_t89_feat_2_sim_iter_4000.caffemodel
I0715 13:11:15.882194 19421 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/siamese/My_mnist_siamese_0to6_t89_feat_2_sim_iter_4000.solverstate
I0715 13:11:15.885001 19421 solver.cpp:337] Iteration 4000, Testing net (#0)
I0715 13:11:25.970419 19421 solver.cpp:404]     Test net output #0: accuracy = 0.7271
I0715 13:11:25.970481 19421 solver.cpp:404]     Test net output #1: loss = 1.08633 (* 1 = 1.08633 loss)
I0715 13:11:26.155751 19421 solver.cpp:228] Iteration 4000, loss = 0.00123543
I0715 13:11:26.155812 19421 solver.cpp:244]     Train net output #0: loss = 0.00123561 (* 1 = 0.00123561 loss)
I0715 13:11:26.155853 19421 sgd_solver.cpp:106] Iteration 4000, lr = 0.0077697
I0715 13:11:41.956378 19421 solver.cpp:337] Iteration 4100, Testing net (#0)
I0715 13:11:51.924518 19421 solver.cpp:404]     Test net output #0: accuracy = 0.708
I0715 13:11:51.924850 19421 solver.cpp:404]     Test net output #1: loss = 1.24185 (* 1 = 1.24185 loss)
I0715 13:11:52.110081 19421 solver.cpp:228] Iteration 4100, loss = 0.00854046
I0715 13:11:52.110326 19421 solver.cpp:244]     Train net output #0: loss = 0.00854065 (* 1 = 0.00854065 loss)
I0715 13:11:52.110414 19421 sgd_solver.cpp:106] Iteration 4100, lr = 0.00772833
I0715 13:12:08.117903 19421 solver.cpp:337] Iteration 4200, Testing net (#0)
I0715 13:12:19.231498 19421 solver.cpp:404]     Test net output #0: accuracy = 0.6812
I0715 13:12:19.231551 19421 solver.cpp:404]     Test net output #1: loss = 1.11938 (* 1 = 1.11938 loss)
I0715 13:12:19.452213 19421 solver.cpp:228] Iteration 4200, loss = 0.0262777
I0715 13:12:19.452301 19421 solver.cpp:244]     Train net output #0: loss = 0.0262779 (* 1 = 0.0262779 loss)
I0715 13:12:19.452316 19421 sgd_solver.cpp:106] Iteration 4200, lr = 0.00768748
I0715 13:12:36.239935 19421 solver.cpp:337] Iteration 4300, Testing net (#0)
I0715 13:12:46.230545 19421 solver.cpp:404]     Test net output #0: accuracy = 0.7373
I0715 13:12:46.230602 19421 solver.cpp:404]     Test net output #1: loss = 1.2667 (* 1 = 1.2667 loss)
I0715 13:12:46.416867 19421 solver.cpp:228] Iteration 4300, loss = 0.006208
I0715 13:12:46.416929 19421 solver.cpp:244]     Train net output #0: loss = 0.00620816 (* 1 = 0.00620816 loss)
I0715 13:12:46.416940 19421 sgd_solver.cpp:106] Iteration 4300, lr = 0.00764712
I0715 13:13:02.151715 19421 solver.cpp:337] Iteration 4400, Testing net (#0)
I0715 13:13:12.149401 19421 solver.cpp:404]     Test net output #0: accuracy = 0.7484
I0715 13:13:12.149492 19421 solver.cpp:404]     Test net output #1: loss = 1.11893 (* 1 = 1.11893 loss)
I0715 13:13:12.333706 19421 solver.cpp:228] Iteration 4400, loss = 0.00245302
I0715 13:13:12.333767 19421 solver.cpp:244]     Train net output #0: loss = 0.00245319 (* 1 = 0.00245319 loss)
I0715 13:13:12.333778 19421 sgd_solver.cpp:106] Iteration 4400, lr = 0.00760726
I0715 13:13:28.100590 19421 solver.cpp:337] Iteration 4500, Testing net (#0)
I0715 13:13:38.050294 19421 solver.cpp:404]     Test net output #0: accuracy = 0.7132
I0715 13:13:38.050350 19421 solver.cpp:404]     Test net output #1: loss = 1.155 (* 1 = 1.155 loss)
I0715 13:13:38.233055 19421 solver.cpp:228] Iteration 4500, loss = 0.0019118
I0715 13:13:38.233114 19421 solver.cpp:244]     Train net output #0: loss = 0.00191196 (* 1 = 0.00191196 loss)
I0715 13:13:38.233124 19421 sgd_solver.cpp:106] Iteration 4500, lr = 0.00756788
I0715 13:13:54.196166 19421 solver.cpp:337] Iteration 4600, Testing net (#0)
I0715 13:14:04.493844 19421 solver.cpp:404]     Test net output #0: accuracy = 0.7391
I0715 13:14:04.493958 19421 solver.cpp:404]     Test net output #1: loss = 0.993959 (* 1 = 0.993959 loss)
I0715 13:14:04.686550 19421 solver.cpp:228] Iteration 4600, loss = 0.00354522
I0715 13:14:04.686676 19421 solver.cpp:244]     Train net output #0: loss = 0.00354538 (* 1 = 0.00354538 loss)
I0715 13:14:04.686753 19421 sgd_solver.cpp:106] Iteration 4600, lr = 0.00752897
I0715 13:14:23.393875 19421 solver.cpp:337] Iteration 4700, Testing net (#0)
I0715 13:14:34.809469 19421 solver.cpp:404]     Test net output #0: accuracy = 0.7449
I0715 13:14:34.809779 19421 solver.cpp:404]     Test net output #1: loss = 1.17934 (* 1 = 1.17934 loss)
I0715 13:14:35.011126 19421 solver.cpp:228] Iteration 4700, loss = 0.00349759
I0715 13:14:35.011351 19421 solver.cpp:244]     Train net output #0: loss = 0.00349776 (* 1 = 0.00349776 loss)
I0715 13:14:35.011437 19421 sgd_solver.cpp:106] Iteration 4700, lr = 0.00749052
I0715 13:14:50.805961 19421 solver.cpp:337] Iteration 4800, Testing net (#0)
I0715 13:15:00.804946 19421 solver.cpp:404]     Test net output #0: accuracy = 0.736
I0715 13:15:00.805003 19421 solver.cpp:404]     Test net output #1: loss = 1.03481 (* 1 = 1.03481 loss)
I0715 13:15:00.990438 19421 solver.cpp:228] Iteration 4800, loss = 0.00184458
I0715 13:15:00.990500 19421 solver.cpp:244]     Train net output #0: loss = 0.00184469 (* 1 = 0.00184469 loss)
I0715 13:15:00.990511 19421 sgd_solver.cpp:106] Iteration 4800, lr = 0.00745253
I0715 13:15:16.940487 19421 solver.cpp:337] Iteration 4900, Testing net (#0)
I0715 13:15:26.925932 19421 solver.cpp:404]     Test net output #0: accuracy = 0.6725
I0715 13:15:26.925987 19421 solver.cpp:404]     Test net output #1: loss = 1.03869 (* 1 = 1.03869 loss)
I0715 13:15:27.110712 19421 solver.cpp:228] Iteration 4900, loss = 0.0116357
I0715 13:15:27.110772 19421 solver.cpp:244]     Train net output #0: loss = 0.0116358 (* 1 = 0.0116358 loss)
I0715 13:15:27.110785 19421 sgd_solver.cpp:106] Iteration 4900, lr = 0.00741498
I0715 13:15:42.948994 19421 solver.cpp:454] Snapshotting to binary proto file examples/siamese/My_mnist_siamese_0to6_t89_feat_2_sim_iter_5000.caffemodel
I0715 13:15:42.958847 19421 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/siamese/My_mnist_siamese_0to6_t89_feat_2_sim_iter_5000.solverstate
I0715 13:15:43.056030 19421 solver.cpp:317] Iteration 5000, loss = 0.00100213
I0715 13:15:43.056264 19421 solver.cpp:337] Iteration 5000, Testing net (#0)
I0715 13:15:52.999536 19421 solver.cpp:404]     Test net output #0: accuracy = 0.7157
I0715 13:15:52.999917 19421 solver.cpp:404]     Test net output #1: loss = 1.07026 (* 1 = 1.07026 loss)
I0715 13:15:52.999985 19421 solver.cpp:322] Optimization Done.
I0715 13:15:53.000042 19421 caffe.cpp:222] Optimization Done.
