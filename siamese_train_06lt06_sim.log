I0713 21:41:35.510028 31239 caffe.cpp:178] Use CPU.
I0713 21:41:35.510356 31239 solver.cpp:48] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0
snapshot: 500
snapshot_prefix: "examples/siamese/My_mnist_siamese_0to6lt06_sim"
solver_mode: CPU
net: "examples/siamese/mnist_siamese_train_test_sim.prototxt"
I0713 21:41:35.510506 31239 solver.cpp:91] Creating training net from net file: examples/siamese/mnist_siamese_train_test_sim.prototxt
I0713 21:41:35.511113 31239 net.cpp:313] The NetState phase (0) differed from the phase (1) specified by a rule in layer pair_data
I0713 21:41:35.511153 31239 net.cpp:313] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0713 21:41:35.511319 31239 net.cpp:49] Initializing net from parameters: 
name: "mnist_siamese_train_test_sim"
state {
  phase: TRAIN
}
layer {
  name: "pair_data"
  type: "Data"
  top: "pair_data"
  top: "sim"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/siamese/mnist_siamese_train_leveldb_0to6"
    batch_size: 64
  }
}
layer {
  name: "slice_pair"
  type: "Slice"
  bottom: "pair_data"
  top: "data"
  top: "data_p"
  slice_param {
    slice_dim: 1
    slice_point: 1
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    name: "conv1_w"
    lr_mult: 1
  }
  param {
    name: "conv1_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    name: "conv2_w"
    lr_mult: 1
  }
  param {
    name: "conv2_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    name: "ip1_w"
    lr_mult: 1
  }
  param {
    name: "ip1_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    name: "ip2_w"
    lr_mult: 1
  }
  param {
    name: "ip2_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "feat"
  type: "InnerProduct"
  bottom: "ip2"
  top: "feat"
  param {
    name: "feat_w"
    lr_mult: 1
  }
  param {
    name: "feat_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv1_p"
  type: "Convolution"
  bottom: "data_p"
  top: "conv1_p"
  param {
    name: "conv1_w"
    lr_mult: 1
  }
  param {
    name: "conv1_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1_p"
  type: "Pooling"
  bottom: "conv1_p"
  top: "pool1_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_p"
  type: "Convolution"
  bottom: "pool1_p"
  top: "conv2_p"
  param {
    name: "conv2_w"
    lr_mult: 1
  }
  param {
    name: "conv2_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2_p"
  type: "Pooling"
  bottom: "conv2_p"
  top: "pool2_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1_p"
  type: "InnerProduct"
  bottom: "pool2_p"
  top: "ip1_p"
  param {
    name: "ip1_w"
    lr_mult: 1
  }
  param {
    name: "ip1_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1_p"
  type: "ReLU"
  bottom: "ip1_p"
  top: "ip1_p"
}
layer {
  name: "ip2_p"
  type: "InnerProduct"
  bottom: "ip1_p"
  top: "ip2_p"
  param {
    name: "ip2_w"
    lr_mult: 1
  }
  param {
    name: "ip2_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "feat_p"
  type: "InnerProduct"
  bottom: "ip2_p"
  top: "feat_p"
  param {
    name: "feat_w"
    lr_mult: 1
  }
  param {
    name: "feat_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "concat"
  type: "Concat"
  bottom: "feat"
  bottom: "feat_p"
  top: "comb"
  concat_param {
    axis: 1
  }
}
layer {
  name: "fc1"
  type: "InnerProduct"
  bottom: "comb"
  top: "fc1"
  param {
    name: "fc1_w"
    lr_mult: 1
  }
  param {
    name: "fc1_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1_fc1"
  type: "ReLU"
  bottom: "fc1"
  top: "fc1"
}
layer {
  name: "fc2"
  type: "InnerProduct"
  bottom: "fc1"
  top: "fc2"
  param {
    name: "fc2_w"
    lr_mult: 1
  }
  param {
    name: "fc2_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2_fc2"
  type: "ReLU"
  bottom: "fc2"
  top: "fc2"
}
layer {
  name: "fc3"
  type: "InnerProduct"
  bottom: "fc2"
  top: "fc3"
  param {
    name: "fc3_w"
    lr_mult: 1
  }
  param {
    name: "fc3_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SigmoidCrossEntropyLoss"
  bottom: "fc3"
  bottom: "sim"
  top: "loss"
}
I0713 21:41:35.511457 31239 layer_factory.hpp:77] Creating layer pair_data
I0713 21:41:35.512150 31239 net.cpp:91] Creating Layer pair_data
I0713 21:41:35.512177 31239 net.cpp:399] pair_data -> pair_data
I0713 21:41:35.512209 31239 net.cpp:399] pair_data -> sim
I0713 21:41:35.526103 31243 db_leveldb.cpp:18] Opened leveldb examples/siamese/mnist_siamese_train_leveldb_0to6
I0713 21:41:35.526898 31239 data_layer.cpp:41] output data size: 64,2,28,28
I0713 21:41:35.529824 31239 net.cpp:141] Setting up pair_data
I0713 21:41:35.529953 31239 net.cpp:148] Top shape: 64 2 28 28 (100352)
I0713 21:41:35.529978 31239 net.cpp:148] Top shape: 64 (64)
I0713 21:41:35.529985 31239 net.cpp:156] Memory required for data: 401664
I0713 21:41:35.530015 31239 layer_factory.hpp:77] Creating layer slice_pair
I0713 21:41:35.530059 31239 net.cpp:91] Creating Layer slice_pair
I0713 21:41:35.530076 31239 net.cpp:425] slice_pair <- pair_data
I0713 21:41:35.530113 31239 net.cpp:399] slice_pair -> data
I0713 21:41:35.530139 31239 net.cpp:399] slice_pair -> data_p
I0713 21:41:35.530163 31239 net.cpp:141] Setting up slice_pair
I0713 21:41:35.530174 31239 net.cpp:148] Top shape: 64 1 28 28 (50176)
I0713 21:41:35.530181 31239 net.cpp:148] Top shape: 64 1 28 28 (50176)
I0713 21:41:35.530187 31239 net.cpp:156] Memory required for data: 803072
I0713 21:41:35.530192 31239 layer_factory.hpp:77] Creating layer conv1
I0713 21:41:35.530227 31239 net.cpp:91] Creating Layer conv1
I0713 21:41:35.530236 31239 net.cpp:425] conv1 <- data
I0713 21:41:35.530300 31239 net.cpp:399] conv1 -> conv1
I0713 21:41:35.530483 31239 net.cpp:141] Setting up conv1
I0713 21:41:35.530516 31239 net.cpp:148] Top shape: 64 20 24 24 (737280)
I0713 21:41:35.530522 31239 net.cpp:156] Memory required for data: 3752192
I0713 21:41:35.530540 31239 layer_factory.hpp:77] Creating layer pool1
I0713 21:41:35.530563 31239 net.cpp:91] Creating Layer pool1
I0713 21:41:35.530570 31239 net.cpp:425] pool1 <- conv1
I0713 21:41:35.530577 31239 net.cpp:399] pool1 -> pool1
I0713 21:41:35.530616 31239 net.cpp:141] Setting up pool1
I0713 21:41:35.530625 31239 net.cpp:148] Top shape: 64 20 12 12 (184320)
I0713 21:41:35.530630 31239 net.cpp:156] Memory required for data: 4489472
I0713 21:41:35.530635 31239 layer_factory.hpp:77] Creating layer conv2
I0713 21:41:35.530653 31239 net.cpp:91] Creating Layer conv2
I0713 21:41:35.530659 31239 net.cpp:425] conv2 <- pool1
I0713 21:41:35.530669 31239 net.cpp:399] conv2 -> conv2
I0713 21:41:35.531081 31239 net.cpp:141] Setting up conv2
I0713 21:41:35.531168 31239 net.cpp:148] Top shape: 64 50 8 8 (204800)
I0713 21:41:35.531182 31239 net.cpp:156] Memory required for data: 5308672
I0713 21:41:35.531205 31239 layer_factory.hpp:77] Creating layer pool2
I0713 21:41:35.531229 31239 net.cpp:91] Creating Layer pool2
I0713 21:41:35.531239 31239 net.cpp:425] pool2 <- conv2
I0713 21:41:35.531250 31239 net.cpp:399] pool2 -> pool2
I0713 21:41:35.531272 31239 net.cpp:141] Setting up pool2
I0713 21:41:35.531281 31239 net.cpp:148] Top shape: 64 50 4 4 (51200)
I0713 21:41:35.531287 31239 net.cpp:156] Memory required for data: 5513472
I0713 21:41:35.531292 31239 layer_factory.hpp:77] Creating layer ip1
I0713 21:41:35.531322 31239 net.cpp:91] Creating Layer ip1
I0713 21:41:35.531328 31239 net.cpp:425] ip1 <- pool2
I0713 21:41:35.531338 31239 net.cpp:399] ip1 -> ip1
I0713 21:41:35.536273 31239 net.cpp:141] Setting up ip1
I0713 21:41:35.536371 31239 net.cpp:148] Top shape: 64 500 (32000)
I0713 21:41:35.536381 31239 net.cpp:156] Memory required for data: 5641472
I0713 21:41:35.536409 31239 layer_factory.hpp:77] Creating layer relu1
I0713 21:41:35.536434 31239 net.cpp:91] Creating Layer relu1
I0713 21:41:35.536443 31239 net.cpp:425] relu1 <- ip1
I0713 21:41:35.536453 31239 net.cpp:386] relu1 -> ip1 (in-place)
I0713 21:41:35.536476 31239 net.cpp:141] Setting up relu1
I0713 21:41:35.536485 31239 net.cpp:148] Top shape: 64 500 (32000)
I0713 21:41:35.536489 31239 net.cpp:156] Memory required for data: 5769472
I0713 21:41:35.536494 31239 layer_factory.hpp:77] Creating layer ip2
I0713 21:41:35.536511 31239 net.cpp:91] Creating Layer ip2
I0713 21:41:35.536519 31239 net.cpp:425] ip2 <- ip1
I0713 21:41:35.536531 31239 net.cpp:399] ip2 -> ip2
I0713 21:41:35.536618 31239 net.cpp:141] Setting up ip2
I0713 21:41:35.536628 31239 net.cpp:148] Top shape: 64 10 (640)
I0713 21:41:35.536631 31239 net.cpp:156] Memory required for data: 5772032
I0713 21:41:35.536639 31239 layer_factory.hpp:77] Creating layer feat
I0713 21:41:35.536651 31239 net.cpp:91] Creating Layer feat
I0713 21:41:35.536658 31239 net.cpp:425] feat <- ip2
I0713 21:41:35.536669 31239 net.cpp:399] feat -> feat
I0713 21:41:35.536685 31239 net.cpp:141] Setting up feat
I0713 21:41:35.536694 31239 net.cpp:148] Top shape: 64 2 (128)
I0713 21:41:35.536697 31239 net.cpp:156] Memory required for data: 5772544
I0713 21:41:35.536706 31239 layer_factory.hpp:77] Creating layer conv1_p
I0713 21:41:35.536727 31239 net.cpp:91] Creating Layer conv1_p
I0713 21:41:35.536733 31239 net.cpp:425] conv1_p <- data_p
I0713 21:41:35.536741 31239 net.cpp:399] conv1_p -> conv1_p
I0713 21:41:35.536782 31239 net.cpp:141] Setting up conv1_p
I0713 21:41:35.536794 31239 net.cpp:148] Top shape: 64 20 24 24 (737280)
I0713 21:41:35.536798 31239 net.cpp:156] Memory required for data: 8721664
I0713 21:41:35.536804 31239 net.cpp:484] Sharing parameters 'conv1_w' owned by layer 'conv1', param index 0
I0713 21:41:35.536810 31239 net.cpp:484] Sharing parameters 'conv1_b' owned by layer 'conv1', param index 1
I0713 21:41:35.536814 31239 layer_factory.hpp:77] Creating layer pool1_p
I0713 21:41:35.536869 31239 net.cpp:91] Creating Layer pool1_p
I0713 21:41:35.536875 31239 net.cpp:425] pool1_p <- conv1_p
I0713 21:41:35.536881 31239 net.cpp:399] pool1_p -> pool1_p
I0713 21:41:35.536895 31239 net.cpp:141] Setting up pool1_p
I0713 21:41:35.536902 31239 net.cpp:148] Top shape: 64 20 12 12 (184320)
I0713 21:41:35.536906 31239 net.cpp:156] Memory required for data: 9458944
I0713 21:41:35.536908 31239 layer_factory.hpp:77] Creating layer conv2_p
I0713 21:41:35.536922 31239 net.cpp:91] Creating Layer conv2_p
I0713 21:41:35.536927 31239 net.cpp:425] conv2_p <- pool1_p
I0713 21:41:35.536934 31239 net.cpp:399] conv2_p -> conv2_p
I0713 21:41:35.537190 31239 net.cpp:141] Setting up conv2_p
I0713 21:41:35.537205 31239 net.cpp:148] Top shape: 64 50 8 8 (204800)
I0713 21:41:35.537210 31239 net.cpp:156] Memory required for data: 10278144
I0713 21:41:35.537217 31239 net.cpp:484] Sharing parameters 'conv2_w' owned by layer 'conv2', param index 0
I0713 21:41:35.537222 31239 net.cpp:484] Sharing parameters 'conv2_b' owned by layer 'conv2', param index 1
I0713 21:41:35.537227 31239 layer_factory.hpp:77] Creating layer pool2_p
I0713 21:41:35.537236 31239 net.cpp:91] Creating Layer pool2_p
I0713 21:41:35.537242 31239 net.cpp:425] pool2_p <- conv2_p
I0713 21:41:35.537255 31239 net.cpp:399] pool2_p -> pool2_p
I0713 21:41:35.537266 31239 net.cpp:141] Setting up pool2_p
I0713 21:41:35.537272 31239 net.cpp:148] Top shape: 64 50 4 4 (51200)
I0713 21:41:35.537276 31239 net.cpp:156] Memory required for data: 10482944
I0713 21:41:35.537279 31239 layer_factory.hpp:77] Creating layer ip1_p
I0713 21:41:35.537289 31239 net.cpp:91] Creating Layer ip1_p
I0713 21:41:35.537293 31239 net.cpp:425] ip1_p <- pool2_p
I0713 21:41:35.537302 31239 net.cpp:399] ip1_p -> ip1_p
I0713 21:41:35.550809 31239 net.cpp:141] Setting up ip1_p
I0713 21:41:35.550864 31239 net.cpp:148] Top shape: 64 500 (32000)
I0713 21:41:35.550869 31239 net.cpp:156] Memory required for data: 10610944
I0713 21:41:35.550878 31239 net.cpp:484] Sharing parameters 'ip1_w' owned by layer 'ip1', param index 0
I0713 21:41:35.550882 31239 net.cpp:484] Sharing parameters 'ip1_b' owned by layer 'ip1', param index 1
I0713 21:41:35.550885 31239 layer_factory.hpp:77] Creating layer relu1_p
I0713 21:41:35.550896 31239 net.cpp:91] Creating Layer relu1_p
I0713 21:41:35.550901 31239 net.cpp:425] relu1_p <- ip1_p
I0713 21:41:35.550910 31239 net.cpp:386] relu1_p -> ip1_p (in-place)
I0713 21:41:35.550922 31239 net.cpp:141] Setting up relu1_p
I0713 21:41:35.550940 31239 net.cpp:148] Top shape: 64 500 (32000)
I0713 21:41:35.550945 31239 net.cpp:156] Memory required for data: 10738944
I0713 21:41:35.550947 31239 layer_factory.hpp:77] Creating layer ip2_p
I0713 21:41:35.550993 31239 net.cpp:91] Creating Layer ip2_p
I0713 21:41:35.550999 31239 net.cpp:425] ip2_p <- ip1_p
I0713 21:41:35.551005 31239 net.cpp:399] ip2_p -> ip2_p
I0713 21:41:35.551064 31239 net.cpp:141] Setting up ip2_p
I0713 21:41:35.551082 31239 net.cpp:148] Top shape: 64 10 (640)
I0713 21:41:35.551085 31239 net.cpp:156] Memory required for data: 10741504
I0713 21:41:35.551090 31239 net.cpp:484] Sharing parameters 'ip2_w' owned by layer 'ip2', param index 0
I0713 21:41:35.551095 31239 net.cpp:484] Sharing parameters 'ip2_b' owned by layer 'ip2', param index 1
I0713 21:41:35.551097 31239 layer_factory.hpp:77] Creating layer feat_p
I0713 21:41:35.551103 31239 net.cpp:91] Creating Layer feat_p
I0713 21:41:35.551106 31239 net.cpp:425] feat_p <- ip2_p
I0713 21:41:35.551110 31239 net.cpp:399] feat_p -> feat_p
I0713 21:41:35.551134 31239 net.cpp:141] Setting up feat_p
I0713 21:41:35.551139 31239 net.cpp:148] Top shape: 64 2 (128)
I0713 21:41:35.551142 31239 net.cpp:156] Memory required for data: 10742016
I0713 21:41:35.551146 31239 net.cpp:484] Sharing parameters 'feat_w' owned by layer 'feat', param index 0
I0713 21:41:35.551148 31239 net.cpp:484] Sharing parameters 'feat_b' owned by layer 'feat', param index 1
I0713 21:41:35.551151 31239 layer_factory.hpp:77] Creating layer concat
I0713 21:41:35.551157 31239 net.cpp:91] Creating Layer concat
I0713 21:41:35.551178 31239 net.cpp:425] concat <- feat
I0713 21:41:35.551182 31239 net.cpp:425] concat <- feat_p
I0713 21:41:35.551199 31239 net.cpp:399] concat -> comb
I0713 21:41:35.551211 31239 net.cpp:141] Setting up concat
I0713 21:41:35.551215 31239 net.cpp:148] Top shape: 64 4 (256)
I0713 21:41:35.551218 31239 net.cpp:156] Memory required for data: 10743040
I0713 21:41:35.551220 31239 layer_factory.hpp:77] Creating layer fc1
I0713 21:41:35.551229 31239 net.cpp:91] Creating Layer fc1
I0713 21:41:35.551230 31239 net.cpp:425] fc1 <- comb
I0713 21:41:35.551235 31239 net.cpp:399] fc1 -> fc1
I0713 21:41:35.551250 31239 net.cpp:141] Setting up fc1
I0713 21:41:35.551254 31239 net.cpp:148] Top shape: 64 100 (6400)
I0713 21:41:35.551256 31239 net.cpp:156] Memory required for data: 10768640
I0713 21:41:35.551261 31239 layer_factory.hpp:77] Creating layer relu1_fc1
I0713 21:41:35.551265 31239 net.cpp:91] Creating Layer relu1_fc1
I0713 21:41:35.551268 31239 net.cpp:425] relu1_fc1 <- fc1
I0713 21:41:35.551272 31239 net.cpp:386] relu1_fc1 -> fc1 (in-place)
I0713 21:41:35.551277 31239 net.cpp:141] Setting up relu1_fc1
I0713 21:41:35.551280 31239 net.cpp:148] Top shape: 64 100 (6400)
I0713 21:41:35.551282 31239 net.cpp:156] Memory required for data: 10794240
I0713 21:41:35.551285 31239 layer_factory.hpp:77] Creating layer fc2
I0713 21:41:35.551290 31239 net.cpp:91] Creating Layer fc2
I0713 21:41:35.551292 31239 net.cpp:425] fc2 <- fc1
I0713 21:41:35.551302 31239 net.cpp:399] fc2 -> fc2
I0713 21:41:35.551345 31239 net.cpp:141] Setting up fc2
I0713 21:41:35.551360 31239 net.cpp:148] Top shape: 64 50 (3200)
I0713 21:41:35.551363 31239 net.cpp:156] Memory required for data: 10807040
I0713 21:41:35.551367 31239 layer_factory.hpp:77] Creating layer relu2_fc2
I0713 21:41:35.551372 31239 net.cpp:91] Creating Layer relu2_fc2
I0713 21:41:35.551374 31239 net.cpp:425] relu2_fc2 <- fc2
I0713 21:41:35.551378 31239 net.cpp:386] relu2_fc2 -> fc2 (in-place)
I0713 21:41:35.551381 31239 net.cpp:141] Setting up relu2_fc2
I0713 21:41:35.551384 31239 net.cpp:148] Top shape: 64 50 (3200)
I0713 21:41:35.551388 31239 net.cpp:156] Memory required for data: 10819840
I0713 21:41:35.551389 31239 layer_factory.hpp:77] Creating layer fc3
I0713 21:41:35.551396 31239 net.cpp:91] Creating Layer fc3
I0713 21:41:35.551399 31239 net.cpp:425] fc3 <- fc2
I0713 21:41:35.551403 31239 net.cpp:399] fc3 -> fc3
I0713 21:41:35.551412 31239 net.cpp:141] Setting up fc3
I0713 21:41:35.551416 31239 net.cpp:148] Top shape: 64 1 (64)
I0713 21:41:35.551419 31239 net.cpp:156] Memory required for data: 10820096
I0713 21:41:35.551421 31239 layer_factory.hpp:77] Creating layer loss
I0713 21:41:35.551429 31239 net.cpp:91] Creating Layer loss
I0713 21:41:35.551430 31239 net.cpp:425] loss <- fc3
I0713 21:41:35.551434 31239 net.cpp:425] loss <- sim
I0713 21:41:35.551450 31239 net.cpp:399] loss -> loss
I0713 21:41:35.551460 31239 net.cpp:141] Setting up loss
I0713 21:41:35.551465 31239 net.cpp:148] Top shape: (1)
I0713 21:41:35.551466 31239 net.cpp:151]     with loss weight 1
I0713 21:41:35.551486 31239 net.cpp:156] Memory required for data: 10820100
I0713 21:41:35.551488 31239 net.cpp:217] loss needs backward computation.
I0713 21:41:35.551491 31239 net.cpp:217] fc3 needs backward computation.
I0713 21:41:35.551493 31239 net.cpp:217] relu2_fc2 needs backward computation.
I0713 21:41:35.551496 31239 net.cpp:217] fc2 needs backward computation.
I0713 21:41:35.551498 31239 net.cpp:217] relu1_fc1 needs backward computation.
I0713 21:41:35.551501 31239 net.cpp:217] fc1 needs backward computation.
I0713 21:41:35.551503 31239 net.cpp:217] concat needs backward computation.
I0713 21:41:35.551506 31239 net.cpp:217] feat_p needs backward computation.
I0713 21:41:35.551508 31239 net.cpp:217] ip2_p needs backward computation.
I0713 21:41:35.551512 31239 net.cpp:217] relu1_p needs backward computation.
I0713 21:41:35.551513 31239 net.cpp:217] ip1_p needs backward computation.
I0713 21:41:35.551517 31239 net.cpp:217] pool2_p needs backward computation.
I0713 21:41:35.551519 31239 net.cpp:217] conv2_p needs backward computation.
I0713 21:41:35.551545 31239 net.cpp:217] pool1_p needs backward computation.
I0713 21:41:35.551549 31239 net.cpp:217] conv1_p needs backward computation.
I0713 21:41:35.551553 31239 net.cpp:217] feat needs backward computation.
I0713 21:41:35.551555 31239 net.cpp:217] ip2 needs backward computation.
I0713 21:41:35.551558 31239 net.cpp:217] relu1 needs backward computation.
I0713 21:41:35.551560 31239 net.cpp:217] ip1 needs backward computation.
I0713 21:41:35.551563 31239 net.cpp:217] pool2 needs backward computation.
I0713 21:41:35.551566 31239 net.cpp:217] conv2 needs backward computation.
I0713 21:41:35.551569 31239 net.cpp:217] pool1 needs backward computation.
I0713 21:41:35.551571 31239 net.cpp:217] conv1 needs backward computation.
I0713 21:41:35.551575 31239 net.cpp:219] slice_pair does not need backward computation.
I0713 21:41:35.551578 31239 net.cpp:219] pair_data does not need backward computation.
I0713 21:41:35.551581 31239 net.cpp:261] This network produces output loss
I0713 21:41:35.551729 31239 net.cpp:274] Network initialization done.
I0713 21:41:35.552450 31239 solver.cpp:181] Creating test net (#0) specified by net file: examples/siamese/mnist_siamese_train_test_sim.prototxt
I0713 21:41:35.552533 31239 net.cpp:313] The NetState phase (1) differed from the phase (0) specified by a rule in layer pair_data
I0713 21:41:35.552701 31239 net.cpp:49] Initializing net from parameters: 
name: "mnist_siamese_train_test_sim"
state {
  phase: TEST
}
layer {
  name: "pair_data"
  type: "Data"
  top: "pair_data"
  top: "sim"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/siamese/mnist_siamese_test_leveldb_0to6"
    batch_size: 100
  }
}
layer {
  name: "slice_pair"
  type: "Slice"
  bottom: "pair_data"
  top: "data"
  top: "data_p"
  slice_param {
    slice_dim: 1
    slice_point: 1
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    name: "conv1_w"
    lr_mult: 1
  }
  param {
    name: "conv1_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    name: "conv2_w"
    lr_mult: 1
  }
  param {
    name: "conv2_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    name: "ip1_w"
    lr_mult: 1
  }
  param {
    name: "ip1_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    name: "ip2_w"
    lr_mult: 1
  }
  param {
    name: "ip2_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "feat"
  type: "InnerProduct"
  bottom: "ip2"
  top: "feat"
  param {
    name: "feat_w"
    lr_mult: 1
  }
  param {
    name: "feat_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv1_p"
  type: "Convolution"
  bottom: "data_p"
  top: "conv1_p"
  param {
    name: "conv1_w"
    lr_mult: 1
  }
  param {
    name: "conv1_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1_p"
  type: "Pooling"
  bottom: "conv1_p"
  top: "pool1_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_p"
  type: "Convolution"
  bottom: "pool1_p"
  top: "conv2_p"
  param {
    name: "conv2_w"
    lr_mult: 1
  }
  param {
    name: "conv2_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2_p"
  type: "Pooling"
  bottom: "conv2_p"
  top: "pool2_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1_p"
  type: "InnerProduct"
  bottom: "pool2_p"
  top: "ip1_p"
  param {
    name: "ip1_w"
    lr_mult: 1
  }
  param {
    name: "ip1_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1_p"
  type: "ReLU"
  bottom: "ip1_p"
  top: "ip1_p"
}
layer {
  name: "ip2_p"
  type: "InnerProduct"
  bottom: "ip1_p"
  top: "ip2_p"
  param {
    name: "ip2_w"
    lr_mult: 1
  }
  param {
    name: "ip2_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "feat_p"
  type: "InnerProduct"
  bottom: "ip2_p"
  top: "feat_p"
  param {
    name: "feat_w"
    lr_mult: 1
  }
  param {
    name: "feat_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "concat"
  type: "Concat"
  bottom: "feat"
  bottom: "feat_p"
  top: "comb"
  concat_param {
    axis: 1
  }
}
layer {
  name: "fc1"
  type: "InnerProduct"
  bottom: "comb"
  top: "fc1"
  param {
    name: "fc1_w"
    lr_mult: 1
  }
  param {
    name: "fc1_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1_fc1"
  type: "ReLU"
  bottom: "fc1"
  top: "fc1"
}
layer {
  name: "fc2"
  type: "InnerProduct"
  bottom: "fc1"
  top: "fc2"
  param {
    name: "fc2_w"
    lr_mult: 1
  }
  param {
    name: "fc2_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2_fc2"
  type: "ReLU"
  bottom: "fc2"
  top: "fc2"
}
layer {
  name: "fc3"
  type: "InnerProduct"
  bottom: "fc2"
  top: "fc3"
  param {
    name: "fc3_w"
    lr_mult: 1
  }
  param {
    name: "fc3_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SigmoidCrossEntropyLoss"
  bottom: "fc3"
  bottom: "sim"
  top: "loss"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc3"
  bottom: "sim"
  top: "accuracy"
  include {
    phase: TEST
  }
}
I0713 21:41:35.552968 31239 layer_factory.hpp:77] Creating layer pair_data
I0713 21:41:35.553074 31239 net.cpp:91] Creating Layer pair_data
I0713 21:41:35.553095 31239 net.cpp:399] pair_data -> pair_data
I0713 21:41:35.553107 31239 net.cpp:399] pair_data -> sim
I0713 21:41:35.559288 31245 db_leveldb.cpp:18] Opened leveldb examples/siamese/mnist_siamese_test_leveldb_0to6
I0713 21:41:35.559510 31239 data_layer.cpp:41] output data size: 100,2,28,28
I0713 21:41:35.560446 31239 net.cpp:141] Setting up pair_data
I0713 21:41:35.560487 31239 net.cpp:148] Top shape: 100 2 28 28 (156800)
I0713 21:41:35.560493 31239 net.cpp:148] Top shape: 100 (100)
I0713 21:41:35.560497 31239 net.cpp:156] Memory required for data: 627600
I0713 21:41:35.560506 31239 layer_factory.hpp:77] Creating layer sim_pair_data_1_split
I0713 21:41:35.560556 31239 net.cpp:91] Creating Layer sim_pair_data_1_split
I0713 21:41:35.560562 31239 net.cpp:425] sim_pair_data_1_split <- sim
I0713 21:41:35.560571 31239 net.cpp:399] sim_pair_data_1_split -> sim_pair_data_1_split_0
I0713 21:41:35.560582 31239 net.cpp:399] sim_pair_data_1_split -> sim_pair_data_1_split_1
I0713 21:41:35.560595 31239 net.cpp:141] Setting up sim_pair_data_1_split
I0713 21:41:35.560600 31239 net.cpp:148] Top shape: 100 (100)
I0713 21:41:35.560606 31239 net.cpp:148] Top shape: 100 (100)
I0713 21:41:35.560609 31239 net.cpp:156] Memory required for data: 628400
I0713 21:41:35.560613 31239 layer_factory.hpp:77] Creating layer slice_pair
I0713 21:41:35.560622 31239 net.cpp:91] Creating Layer slice_pair
I0713 21:41:35.560626 31239 net.cpp:425] slice_pair <- pair_data
I0713 21:41:35.560632 31239 net.cpp:399] slice_pair -> data
I0713 21:41:35.560639 31239 net.cpp:399] slice_pair -> data_p
I0713 21:41:35.560649 31239 net.cpp:141] Setting up slice_pair
I0713 21:41:35.560655 31239 net.cpp:148] Top shape: 100 1 28 28 (78400)
I0713 21:41:35.560660 31239 net.cpp:148] Top shape: 100 1 28 28 (78400)
I0713 21:41:35.560664 31239 net.cpp:156] Memory required for data: 1255600
I0713 21:41:35.560668 31239 layer_factory.hpp:77] Creating layer conv1
I0713 21:41:35.560681 31239 net.cpp:91] Creating Layer conv1
I0713 21:41:35.560685 31239 net.cpp:425] conv1 <- data
I0713 21:41:35.560693 31239 net.cpp:399] conv1 -> conv1
I0713 21:41:35.560729 31239 net.cpp:141] Setting up conv1
I0713 21:41:35.560737 31239 net.cpp:148] Top shape: 100 20 24 24 (1152000)
I0713 21:41:35.560741 31239 net.cpp:156] Memory required for data: 5863600
I0713 21:41:35.560752 31239 layer_factory.hpp:77] Creating layer pool1
I0713 21:41:35.560762 31239 net.cpp:91] Creating Layer pool1
I0713 21:41:35.560767 31239 net.cpp:425] pool1 <- conv1
I0713 21:41:35.560773 31239 net.cpp:399] pool1 -> pool1
I0713 21:41:35.560786 31239 net.cpp:141] Setting up pool1
I0713 21:41:35.560791 31239 net.cpp:148] Top shape: 100 20 12 12 (288000)
I0713 21:41:35.560796 31239 net.cpp:156] Memory required for data: 7015600
I0713 21:41:35.560799 31239 layer_factory.hpp:77] Creating layer conv2
I0713 21:41:35.560811 31239 net.cpp:91] Creating Layer conv2
I0713 21:41:35.560814 31239 net.cpp:425] conv2 <- pool1
I0713 21:41:35.560828 31239 net.cpp:399] conv2 -> conv2
I0713 21:41:35.561089 31239 net.cpp:141] Setting up conv2
I0713 21:41:35.561100 31239 net.cpp:148] Top shape: 100 50 8 8 (320000)
I0713 21:41:35.561105 31239 net.cpp:156] Memory required for data: 8295600
I0713 21:41:35.561112 31239 layer_factory.hpp:77] Creating layer pool2
I0713 21:41:35.561120 31239 net.cpp:91] Creating Layer pool2
I0713 21:41:35.561125 31239 net.cpp:425] pool2 <- conv2
I0713 21:41:35.561131 31239 net.cpp:399] pool2 -> pool2
I0713 21:41:35.561141 31239 net.cpp:141] Setting up pool2
I0713 21:41:35.561147 31239 net.cpp:148] Top shape: 100 50 4 4 (80000)
I0713 21:41:35.561151 31239 net.cpp:156] Memory required for data: 8615600
I0713 21:41:35.561156 31239 layer_factory.hpp:77] Creating layer ip1
I0713 21:41:35.561167 31239 net.cpp:91] Creating Layer ip1
I0713 21:41:35.561172 31239 net.cpp:425] ip1 <- pool2
I0713 21:41:35.561177 31239 net.cpp:399] ip1 -> ip1
I0713 21:41:35.570888 31239 net.cpp:141] Setting up ip1
I0713 21:41:35.570950 31239 net.cpp:148] Top shape: 100 500 (50000)
I0713 21:41:35.570957 31239 net.cpp:156] Memory required for data: 8815600
I0713 21:41:35.570978 31239 layer_factory.hpp:77] Creating layer relu1
I0713 21:41:35.571002 31239 net.cpp:91] Creating Layer relu1
I0713 21:41:35.571008 31239 net.cpp:425] relu1 <- ip1
I0713 21:41:35.571017 31239 net.cpp:386] relu1 -> ip1 (in-place)
I0713 21:41:35.571035 31239 net.cpp:141] Setting up relu1
I0713 21:41:35.571046 31239 net.cpp:148] Top shape: 100 500 (50000)
I0713 21:41:35.571051 31239 net.cpp:156] Memory required for data: 9015600
I0713 21:41:35.571056 31239 layer_factory.hpp:77] Creating layer ip2
I0713 21:41:35.571069 31239 net.cpp:91] Creating Layer ip2
I0713 21:41:35.571074 31239 net.cpp:425] ip2 <- ip1
I0713 21:41:35.571113 31239 net.cpp:399] ip2 -> ip2
I0713 21:41:35.571190 31239 net.cpp:141] Setting up ip2
I0713 21:41:35.571203 31239 net.cpp:148] Top shape: 100 10 (1000)
I0713 21:41:35.571211 31239 net.cpp:156] Memory required for data: 9019600
I0713 21:41:35.571223 31239 layer_factory.hpp:77] Creating layer feat
I0713 21:41:35.571233 31239 net.cpp:91] Creating Layer feat
I0713 21:41:35.571238 31239 net.cpp:425] feat <- ip2
I0713 21:41:35.571244 31239 net.cpp:399] feat -> feat
I0713 21:41:35.571270 31239 net.cpp:141] Setting up feat
I0713 21:41:35.571277 31239 net.cpp:148] Top shape: 100 2 (200)
I0713 21:41:35.571282 31239 net.cpp:156] Memory required for data: 9020400
I0713 21:41:35.571291 31239 layer_factory.hpp:77] Creating layer conv1_p
I0713 21:41:35.571305 31239 net.cpp:91] Creating Layer conv1_p
I0713 21:41:35.571310 31239 net.cpp:425] conv1_p <- data_p
I0713 21:41:35.571316 31239 net.cpp:399] conv1_p -> conv1_p
I0713 21:41:35.571357 31239 net.cpp:141] Setting up conv1_p
I0713 21:41:35.571364 31239 net.cpp:148] Top shape: 100 20 24 24 (1152000)
I0713 21:41:35.571369 31239 net.cpp:156] Memory required for data: 13628400
I0713 21:41:35.571374 31239 net.cpp:484] Sharing parameters 'conv1_w' owned by layer 'conv1', param index 0
I0713 21:41:35.571384 31239 net.cpp:484] Sharing parameters 'conv1_b' owned by layer 'conv1', param index 1
I0713 21:41:35.571391 31239 layer_factory.hpp:77] Creating layer pool1_p
I0713 21:41:35.571401 31239 net.cpp:91] Creating Layer pool1_p
I0713 21:41:35.571406 31239 net.cpp:425] pool1_p <- conv1_p
I0713 21:41:35.571415 31239 net.cpp:399] pool1_p -> pool1_p
I0713 21:41:35.571426 31239 net.cpp:141] Setting up pool1_p
I0713 21:41:35.571434 31239 net.cpp:148] Top shape: 100 20 12 12 (288000)
I0713 21:41:35.571437 31239 net.cpp:156] Memory required for data: 14780400
I0713 21:41:35.571451 31239 layer_factory.hpp:77] Creating layer conv2_p
I0713 21:41:35.571460 31239 net.cpp:91] Creating Layer conv2_p
I0713 21:41:35.571465 31239 net.cpp:425] conv2_p <- pool1_p
I0713 21:41:35.571472 31239 net.cpp:399] conv2_p -> conv2_p
I0713 21:41:35.572962 31239 net.cpp:141] Setting up conv2_p
I0713 21:41:35.572996 31239 net.cpp:148] Top shape: 100 50 8 8 (320000)
I0713 21:41:35.573001 31239 net.cpp:156] Memory required for data: 16060400
I0713 21:41:35.573010 31239 net.cpp:484] Sharing parameters 'conv2_w' owned by layer 'conv2', param index 0
I0713 21:41:35.573017 31239 net.cpp:484] Sharing parameters 'conv2_b' owned by layer 'conv2', param index 1
I0713 21:41:35.573022 31239 layer_factory.hpp:77] Creating layer pool2_p
I0713 21:41:35.573034 31239 net.cpp:91] Creating Layer pool2_p
I0713 21:41:35.573038 31239 net.cpp:425] pool2_p <- conv2_p
I0713 21:41:35.573055 31239 net.cpp:399] pool2_p -> pool2_p
I0713 21:41:35.573079 31239 net.cpp:141] Setting up pool2_p
I0713 21:41:35.573088 31239 net.cpp:148] Top shape: 100 50 4 4 (80000)
I0713 21:41:35.573092 31239 net.cpp:156] Memory required for data: 16380400
I0713 21:41:35.573096 31239 layer_factory.hpp:77] Creating layer ip1_p
I0713 21:41:35.573107 31239 net.cpp:91] Creating Layer ip1_p
I0713 21:41:35.573112 31239 net.cpp:425] ip1_p <- pool2_p
I0713 21:41:35.573120 31239 net.cpp:399] ip1_p -> ip1_p
I0713 21:41:35.582454 31239 net.cpp:141] Setting up ip1_p
I0713 21:41:35.582547 31239 net.cpp:148] Top shape: 100 500 (50000)
I0713 21:41:35.582554 31239 net.cpp:156] Memory required for data: 16580400
I0713 21:41:35.582566 31239 net.cpp:484] Sharing parameters 'ip1_w' owned by layer 'ip1', param index 0
I0713 21:41:35.582573 31239 net.cpp:484] Sharing parameters 'ip1_b' owned by layer 'ip1', param index 1
I0713 21:41:35.582579 31239 layer_factory.hpp:77] Creating layer relu1_p
I0713 21:41:35.582604 31239 net.cpp:91] Creating Layer relu1_p
I0713 21:41:35.582612 31239 net.cpp:425] relu1_p <- ip1_p
I0713 21:41:35.582629 31239 net.cpp:386] relu1_p -> ip1_p (in-place)
I0713 21:41:35.582643 31239 net.cpp:141] Setting up relu1_p
I0713 21:41:35.582650 31239 net.cpp:148] Top shape: 100 500 (50000)
I0713 21:41:35.582654 31239 net.cpp:156] Memory required for data: 16780400
I0713 21:41:35.582695 31239 layer_factory.hpp:77] Creating layer ip2_p
I0713 21:41:35.582707 31239 net.cpp:91] Creating Layer ip2_p
I0713 21:41:35.582712 31239 net.cpp:425] ip2_p <- ip1_p
I0713 21:41:35.582727 31239 net.cpp:399] ip2_p -> ip2_p
I0713 21:41:35.582814 31239 net.cpp:141] Setting up ip2_p
I0713 21:41:35.582823 31239 net.cpp:148] Top shape: 100 10 (1000)
I0713 21:41:35.582828 31239 net.cpp:156] Memory required for data: 16784400
I0713 21:41:35.582837 31239 net.cpp:484] Sharing parameters 'ip2_w' owned by layer 'ip2', param index 0
I0713 21:41:35.582844 31239 net.cpp:484] Sharing parameters 'ip2_b' owned by layer 'ip2', param index 1
I0713 21:41:35.582849 31239 layer_factory.hpp:77] Creating layer feat_p
I0713 21:41:35.582857 31239 net.cpp:91] Creating Layer feat_p
I0713 21:41:35.582861 31239 net.cpp:425] feat_p <- ip2_p
I0713 21:41:35.582870 31239 net.cpp:399] feat_p -> feat_p
I0713 21:41:35.582885 31239 net.cpp:141] Setting up feat_p
I0713 21:41:35.582891 31239 net.cpp:148] Top shape: 100 2 (200)
I0713 21:41:35.582895 31239 net.cpp:156] Memory required for data: 16785200
I0713 21:41:35.582901 31239 net.cpp:484] Sharing parameters 'feat_w' owned by layer 'feat', param index 0
I0713 21:41:35.582906 31239 net.cpp:484] Sharing parameters 'feat_b' owned by layer 'feat', param index 1
I0713 21:41:35.582911 31239 layer_factory.hpp:77] Creating layer concat
I0713 21:41:35.582921 31239 net.cpp:91] Creating Layer concat
I0713 21:41:35.582926 31239 net.cpp:425] concat <- feat
I0713 21:41:35.582931 31239 net.cpp:425] concat <- feat_p
I0713 21:41:35.582940 31239 net.cpp:399] concat -> comb
I0713 21:41:35.582952 31239 net.cpp:141] Setting up concat
I0713 21:41:35.582957 31239 net.cpp:148] Top shape: 100 4 (400)
I0713 21:41:35.582962 31239 net.cpp:156] Memory required for data: 16786800
I0713 21:41:35.582967 31239 layer_factory.hpp:77] Creating layer fc1
I0713 21:41:35.582974 31239 net.cpp:91] Creating Layer fc1
I0713 21:41:35.582979 31239 net.cpp:425] fc1 <- comb
I0713 21:41:35.582985 31239 net.cpp:399] fc1 -> fc1
I0713 21:41:35.583008 31239 net.cpp:141] Setting up fc1
I0713 21:41:35.583014 31239 net.cpp:148] Top shape: 100 100 (10000)
I0713 21:41:35.583019 31239 net.cpp:156] Memory required for data: 16826800
I0713 21:41:35.583025 31239 layer_factory.hpp:77] Creating layer relu1_fc1
I0713 21:41:35.583032 31239 net.cpp:91] Creating Layer relu1_fc1
I0713 21:41:35.583036 31239 net.cpp:425] relu1_fc1 <- fc1
I0713 21:41:35.583044 31239 net.cpp:386] relu1_fc1 -> fc1 (in-place)
I0713 21:41:35.583050 31239 net.cpp:141] Setting up relu1_fc1
I0713 21:41:35.583056 31239 net.cpp:148] Top shape: 100 100 (10000)
I0713 21:41:35.583060 31239 net.cpp:156] Memory required for data: 16866800
I0713 21:41:35.583065 31239 layer_factory.hpp:77] Creating layer fc2
I0713 21:41:35.583076 31239 net.cpp:91] Creating Layer fc2
I0713 21:41:35.583081 31239 net.cpp:425] fc2 <- fc1
I0713 21:41:35.583096 31239 net.cpp:399] fc2 -> fc2
I0713 21:41:35.583159 31239 net.cpp:141] Setting up fc2
I0713 21:41:35.583170 31239 net.cpp:148] Top shape: 100 50 (5000)
I0713 21:41:35.583174 31239 net.cpp:156] Memory required for data: 16886800
I0713 21:41:35.583183 31239 layer_factory.hpp:77] Creating layer relu2_fc2
I0713 21:41:35.583194 31239 net.cpp:91] Creating Layer relu2_fc2
I0713 21:41:35.583199 31239 net.cpp:425] relu2_fc2 <- fc2
I0713 21:41:35.583204 31239 net.cpp:386] relu2_fc2 -> fc2 (in-place)
I0713 21:41:35.583212 31239 net.cpp:141] Setting up relu2_fc2
I0713 21:41:35.583219 31239 net.cpp:148] Top shape: 100 50 (5000)
I0713 21:41:35.583222 31239 net.cpp:156] Memory required for data: 16906800
I0713 21:41:35.583227 31239 layer_factory.hpp:77] Creating layer fc3
I0713 21:41:35.583235 31239 net.cpp:91] Creating Layer fc3
I0713 21:41:35.583240 31239 net.cpp:425] fc3 <- fc2
I0713 21:41:35.583246 31239 net.cpp:399] fc3 -> fc3
I0713 21:41:35.583268 31239 net.cpp:141] Setting up fc3
I0713 21:41:35.583276 31239 net.cpp:148] Top shape: 100 1 (100)
I0713 21:41:35.583281 31239 net.cpp:156] Memory required for data: 16907200
I0713 21:41:35.583287 31239 layer_factory.hpp:77] Creating layer fc3_fc3_0_split
I0713 21:41:35.583320 31239 net.cpp:91] Creating Layer fc3_fc3_0_split
I0713 21:41:35.583325 31239 net.cpp:425] fc3_fc3_0_split <- fc3
I0713 21:41:35.583331 31239 net.cpp:399] fc3_fc3_0_split -> fc3_fc3_0_split_0
I0713 21:41:35.583339 31239 net.cpp:399] fc3_fc3_0_split -> fc3_fc3_0_split_1
I0713 21:41:35.583349 31239 net.cpp:141] Setting up fc3_fc3_0_split
I0713 21:41:35.583355 31239 net.cpp:148] Top shape: 100 1 (100)
I0713 21:41:35.583360 31239 net.cpp:148] Top shape: 100 1 (100)
I0713 21:41:35.583364 31239 net.cpp:156] Memory required for data: 16908000
I0713 21:41:35.583369 31239 layer_factory.hpp:77] Creating layer loss
I0713 21:41:35.583381 31239 net.cpp:91] Creating Layer loss
I0713 21:41:35.583386 31239 net.cpp:425] loss <- fc3_fc3_0_split_0
I0713 21:41:35.583392 31239 net.cpp:425] loss <- sim_pair_data_1_split_0
I0713 21:41:35.583400 31239 net.cpp:399] loss -> loss
I0713 21:41:35.583413 31239 net.cpp:141] Setting up loss
I0713 21:41:35.583418 31239 net.cpp:148] Top shape: (1)
I0713 21:41:35.583423 31239 net.cpp:151]     with loss weight 1
I0713 21:41:35.583441 31239 net.cpp:156] Memory required for data: 16908004
I0713 21:41:35.583446 31239 layer_factory.hpp:77] Creating layer accuracy
I0713 21:41:35.583453 31239 net.cpp:91] Creating Layer accuracy
I0713 21:41:35.583458 31239 net.cpp:425] accuracy <- fc3_fc3_0_split_1
I0713 21:41:35.583464 31239 net.cpp:425] accuracy <- sim_pair_data_1_split_1
I0713 21:41:35.583473 31239 net.cpp:399] accuracy -> accuracy
I0713 21:41:35.583483 31239 net.cpp:141] Setting up accuracy
I0713 21:41:35.583489 31239 net.cpp:148] Top shape: (1)
I0713 21:41:35.583493 31239 net.cpp:156] Memory required for data: 16908008
I0713 21:41:35.583498 31239 net.cpp:219] accuracy does not need backward computation.
I0713 21:41:35.583503 31239 net.cpp:217] loss needs backward computation.
I0713 21:41:35.583508 31239 net.cpp:217] fc3_fc3_0_split needs backward computation.
I0713 21:41:35.583513 31239 net.cpp:217] fc3 needs backward computation.
I0713 21:41:35.583518 31239 net.cpp:217] relu2_fc2 needs backward computation.
I0713 21:41:35.583523 31239 net.cpp:217] fc2 needs backward computation.
I0713 21:41:35.583526 31239 net.cpp:217] relu1_fc1 needs backward computation.
I0713 21:41:35.583531 31239 net.cpp:217] fc1 needs backward computation.
I0713 21:41:35.583536 31239 net.cpp:217] concat needs backward computation.
I0713 21:41:35.583541 31239 net.cpp:217] feat_p needs backward computation.
I0713 21:41:35.583546 31239 net.cpp:217] ip2_p needs backward computation.
I0713 21:41:35.583551 31239 net.cpp:217] relu1_p needs backward computation.
I0713 21:41:35.583556 31239 net.cpp:217] ip1_p needs backward computation.
I0713 21:41:35.583561 31239 net.cpp:217] pool2_p needs backward computation.
I0713 21:41:35.583567 31239 net.cpp:217] conv2_p needs backward computation.
I0713 21:41:35.583572 31239 net.cpp:217] pool1_p needs backward computation.
I0713 21:41:35.583577 31239 net.cpp:217] conv1_p needs backward computation.
I0713 21:41:35.583582 31239 net.cpp:217] feat needs backward computation.
I0713 21:41:35.583587 31239 net.cpp:217] ip2 needs backward computation.
I0713 21:41:35.583593 31239 net.cpp:217] relu1 needs backward computation.
I0713 21:41:35.583598 31239 net.cpp:217] ip1 needs backward computation.
I0713 21:41:35.583603 31239 net.cpp:217] pool2 needs backward computation.
I0713 21:41:35.583608 31239 net.cpp:217] conv2 needs backward computation.
I0713 21:41:35.583613 31239 net.cpp:217] pool1 needs backward computation.
I0713 21:41:35.583618 31239 net.cpp:217] conv1 needs backward computation.
I0713 21:41:35.583624 31239 net.cpp:219] slice_pair does not need backward computation.
I0713 21:41:35.583631 31239 net.cpp:219] sim_pair_data_1_split does not need backward computation.
I0713 21:41:35.583636 31239 net.cpp:219] pair_data does not need backward computation.
I0713 21:41:35.583641 31239 net.cpp:261] This network produces output accuracy
I0713 21:41:35.583644 31239 net.cpp:261] This network produces output loss
I0713 21:41:35.583753 31239 net.cpp:274] Network initialization done.
I0713 21:41:35.584030 31239 solver.cpp:60] Solver scaffolding done.
I0713 21:41:35.584089 31239 caffe.cpp:219] Starting Optimization
I0713 21:41:35.584095 31239 solver.cpp:279] Solving mnist_siamese_train_test_sim
I0713 21:41:35.584100 31239 solver.cpp:280] Learning Rate Policy: inv
I0713 21:41:35.584470 31239 solver.cpp:337] Iteration 0, Testing net (#0)
I0713 21:41:45.790174 31239 solver.cpp:404]     Test net output #0: accuracy = 0.8521
I0713 21:41:45.790290 31239 solver.cpp:404]     Test net output #1: loss = 0.676024 (* 1 = 0.676024 loss)
I0713 21:41:45.992813 31239 solver.cpp:228] Iteration 0, loss = 0.681277
I0713 21:41:45.992959 31239 solver.cpp:244]     Train net output #0: loss = 0.681277 (* 1 = 0.681277 loss)
I0713 21:41:45.993007 31239 sgd_solver.cpp:106] Iteration 0, lr = 0.01
I0713 21:42:01.884016 31239 solver.cpp:228] Iteration 100, loss = 0.285195
I0713 21:42:01.884171 31239 solver.cpp:244]     Train net output #0: loss = 0.285195 (* 1 = 0.285195 loss)
I0713 21:42:01.884212 31239 sgd_solver.cpp:106] Iteration 100, lr = 0.00992565
I0713 21:42:17.884961 31239 solver.cpp:228] Iteration 200, loss = 0.318103
I0713 21:42:17.885079 31239 solver.cpp:244]     Train net output #0: loss = 0.318103 (* 1 = 0.318103 loss)
I0713 21:42:17.885092 31239 sgd_solver.cpp:106] Iteration 200, lr = 0.00985258
I0713 21:42:37.913249 31239 solver.cpp:228] Iteration 300, loss = 0.250138
I0713 21:42:37.913434 31239 solver.cpp:244]     Train net output #0: loss = 0.250138 (* 1 = 0.250138 loss)
I0713 21:42:37.913461 31239 sgd_solver.cpp:106] Iteration 300, lr = 0.00978075
I0713 21:42:56.172613 31239 solver.cpp:228] Iteration 400, loss = 0.120605
I0713 21:42:56.173182 31239 solver.cpp:244]     Train net output #0: loss = 0.120605 (* 1 = 0.120605 loss)
I0713 21:42:56.173300 31239 sgd_solver.cpp:106] Iteration 400, lr = 0.00971013
I0713 21:43:13.027374 31239 solver.cpp:454] Snapshotting to binary proto file examples/siamese/My_mnist_siamese_0to6lt06_sim_iter_500.caffemodel
I0713 21:43:13.041684 31239 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/siamese/My_mnist_siamese_0to6lt06_sim_iter_500.solverstate
I0713 21:43:13.053946 31239 solver.cpp:337] Iteration 500, Testing net (#0)
I0713 21:43:24.386420 31239 solver.cpp:404]     Test net output #0: accuracy = 0.8521
I0713 21:43:24.386574 31239 solver.cpp:404]     Test net output #1: loss = 0.13774 (* 1 = 0.13774 loss)
I0713 21:43:24.566401 31239 solver.cpp:228] Iteration 500, loss = 0.0819234
I0713 21:43:24.566524 31239 solver.cpp:244]     Train net output #0: loss = 0.0819233 (* 1 = 0.0819233 loss)
I0713 21:43:24.566556 31239 sgd_solver.cpp:106] Iteration 500, lr = 0.00964069
I0713 21:43:41.073022 31239 solver.cpp:228] Iteration 600, loss = 0.117109
I0713 21:43:41.073220 31239 solver.cpp:244]     Train net output #0: loss = 0.117109 (* 1 = 0.117109 loss)
I0713 21:43:41.073235 31239 sgd_solver.cpp:106] Iteration 600, lr = 0.0095724
I0713 21:43:58.632230 31239 solver.cpp:228] Iteration 700, loss = 0.0817654
I0713 21:43:58.632290 31239 solver.cpp:244]     Train net output #0: loss = 0.0817653 (* 1 = 0.0817653 loss)
I0713 21:43:58.632302 31239 sgd_solver.cpp:106] Iteration 700, lr = 0.00950522
I0713 21:44:14.710805 31239 solver.cpp:228] Iteration 800, loss = 0.165116
I0713 21:44:14.711143 31239 solver.cpp:244]     Train net output #0: loss = 0.165116 (* 1 = 0.165116 loss)
I0713 21:44:14.711225 31239 sgd_solver.cpp:106] Iteration 800, lr = 0.00943913
I0713 21:44:30.681866 31239 solver.cpp:228] Iteration 900, loss = 0.0240238
I0713 21:44:30.681926 31239 solver.cpp:244]     Train net output #0: loss = 0.0240236 (* 1 = 0.0240236 loss)
I0713 21:44:30.681938 31239 sgd_solver.cpp:106] Iteration 900, lr = 0.00937411
I0713 21:44:48.862916 31239 solver.cpp:454] Snapshotting to binary proto file examples/siamese/My_mnist_siamese_0to6lt06_sim_iter_1000.caffemodel
I0713 21:44:48.874199 31239 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/siamese/My_mnist_siamese_0to6lt06_sim_iter_1000.solverstate
I0713 21:44:48.972848 31239 solver.cpp:317] Iteration 1000, loss = 0.0684377
I0713 21:44:48.972932 31239 solver.cpp:337] Iteration 1000, Testing net (#0)
I0713 21:44:59.106410 31239 solver.cpp:404]     Test net output #0: accuracy = 0.8521
I0713 21:44:59.106470 31239 solver.cpp:404]     Test net output #1: loss = 0.073112 (* 1 = 0.073112 loss)
I0713 21:44:59.106475 31239 solver.cpp:322] Optimization Done.
I0713 21:44:59.106479 31239 caffe.cpp:222] Optimization Done.
